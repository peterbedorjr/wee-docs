[{"slug":"/v4/build/configuration?id=configuration","title":"Configuration","body":"Wee is setup through a simple configuration file called `wee.config.js` to define your project structure and output.\n"},{"slug":"/v4/build/configuration?id=paths","title":"Paths","body":"Specify high level project directory names\n\npaths: {\n    root: 'public',\n    assets: 'assets',\n    source: 'source',\n    components: 'source/components',\n    build: 'build',\n}\n"},{"slug":"/v4/build/configuration?id=script","title":"Script","body":"Wee utilizes Webpack to build JavaScript output files\n\nMany of the options in the `script` block of `wee.config.js` directly translate to [Webpack documentation](webpack.js.org). Please refer to this documentation if you would like a deeper understanding of some of the concepts discussed.\n\nscript: {\n    entry: {\n        app: 'app.js',\n    },\n    output: {\n        filename: '[name].bundle.js',\n        chunkFilename: '[name].bundle.js',\n    },\n},\n[Entry](https://webpack.js.org/concepts/#entry)\nDefine the [entry point(s)](https://webpack.js.org/concepts/) for your application. Each key represents the output filename, and the value represents the starting point of Webpack's dependency graph. Think of it as the starting point of your application. In most cases, your [routes](/scripts/routes) will live in this file. Glob patterns can be used if referencing multiple entry points.\n\nentry: {\n    app: 'app.js',\n    other: [\n        './source/scripts/other/*.js',\n        'otherapp.js',\n    ],\n},\nResults will be placed in `/public/assets/scripts`\n\napp.bundle.js\nother.bundle.js\n?> **Note:** File paths are relative to `source/scripts` directory unless prefixed with `./` or `../`.\n\n[Manifest](https://webpack.js.org/concepts/manifest/)\nThe manifest file is necessary if you enable content hashing in the filenames of your output file names.  This helps with cache control.\n\nentry: {\n    app: 'app.js'\n},\noutput: {\n    filename: '[nane].bundle.[contenthash].js',\n},\n{\n  \"app.css\": \"app.min.3810d55547a2e185b1fd.css\",\n  \"app.js\": \"app.bundle.789038bc35db550d57a4.js\",\n}\n[Output](https://webpack.js.org/concepts/#output)\nDefine name of output file(s). You can hard-code a filename or use a [substitution](https://webpack.js.org/configuration/output/#output-filename) if you have multiple entry points.\n\nentry: {\n    app: 'app.js'\n},\noutput: {\n    filename: 'app.bundle.js',\n},\nentry: {\n    app: 'app.js',\n    other: 'other.js'\n},\noutput: {\n    filename: '[name].bundle.js',\n},\n[Chunking](https://webpack.js.org/plugins/commons-chunk-plugin/)\nGenerate separate output files containing shared dependencies. This can be very useful if multiple entry points exist by reducing each bundle's individual payloads, and allowing the browser to cache the shared codebase.\n\nEnabling the vendor chunk will pull all dependencies located within the `node_modules` folder into a separate bundle.  Since most updates won't include any changes to the project's dependencies, the `vendor.js` file will be cached while your application code is updated and downloaded again.\n\nchunking: {\n    vendor: {\n        enabled: false,\n        options: {\n            name: 'vendor',\n        },\n    },\n    common: {\n        enabled: false,\n        options: {\n            name: 'common',\n        },\n    },\n},\n?> **Note:** `chunking.options` can take any options passed to the [CommonsChunkPlugin](https://webpack.js.org/plugins/commons-chunk-plugin/).\n"},{"slug":"/v4/build/configuration?id=server","title":"Server","body":"[Browsersync](https://www.browsersync.io/)\nWee uses [Browsersync](https://www.browsersync.io/), a library for running a development server that monitors changes to project files and either auto-injects updates (CSS changes) or auto-refreshes the browser (JS changes) when changes are made. This can be very helpful for streamlining the development process. The CLI command [wee run](/cli/commands#run) starts the dev server based on the configuration in `wee.config.js`.\n\nserver: {\n    ghostMode: false,\n    host: 'auto',\n    port: 9000,\n    https: true,\n    proxy: 'https://wee.dev',\n    static: true,\n    reload: {\n        enable: true,\n        watch: {\n            root: true,\n            paths: [],\n            extensions: [\n                'html',\n            ],\n            ignore: [],\n        },\n    },\n},\nGhostmode\nBrowsersync provides the ability to mirror browsers on different devices. Clicks, scrolls & form inputs on any device will be mirrored to all others when this property is enabled in `wee.json`. This is helpful for manual device testing when you are building a page or feature of a site.\n\nghostMode: true\nHost\nOverride host detection if you know the correct IP to use for the development server. Otherwise, leave this setting on `auto`.\n\nhost: \"192.168.1.1\"\nPort\nUse a specific port for the development server URL. The default port in `wee.json` is `9000`.\n\nport: 8080\nHTTPS\nEnable HTTPS for localhost development. Note - this is not needed for proxy option as it will be inferred from your local target URL.\n\nhttps: true\nProxy\nIf you already have a local server setup, set the local domain that Browsersync should proxy. When the development server is started, you will be able to access your local domain through the Browsersync proxy. The proxy domain generated by Browsersync is based on the `host` and `port` configuration properties.\n\nproxy: \"https://wee.dev\"\n**CLI Command**\n\nwee run --local\n?> **Note:** Running this command will override the `static` property in `wee.json`.\n\nStatic\nRun the development server for serving static files (JS/CSS/HTML) located in your web root (`public` directory by default). Set this property to false if wanting to proxy a local domain. Otherwise, a static development server will be launched when executing `wee run` without a flag.\n\nstatic: true\n**CLI Command**\n\nwee run --static\nReload\nConfigure whether the development server should reload when files change as well as what files to watch for changes.\n\nreload: {\n    enable: true,\n    watch: {\n        root: true,\n        paths: [],\n        extensions: [\n            'html',\n        ],\n        ignore: [],\n    },\n},\n"},{"slug":"/v4/build/configuration?id=style","title":"Style","body":"By default, a single minified stylesheet will be generated by the build process. The options provided here give granular control over the main stylesheet as well as the option to create additional independent stylesheets.\n\nstyle: {\n    entry: {},\n    output: {\n        filename: '[name].min.css',\n        chunkFilename: '[name].min.css',\n    },\n    breakpoints: {\n        mobileLandscape: 480,\n        tablet: 768,\n        desktop: 1024,\n        desktop2: 1280,\n        desktop3: 1440,\n    },\n    breakpointOffset: 25,\n},\nBreakpoints\nEach breakpoint defined in this configuration block will register a min-width media query in your stylesheet output. Each breakpoint can be referred to in component files by their key name.\n\n`breakpointOffset` is intended to account for browsers that push content over to make room for the vertical scrollbar. Each breakpoint value will have this value subtracted from it before generating the media query in output stylesheets.\n\nbreakpoints: {\n    mobileLandscape: 480,\n    tablet: 768,\n    desktop: 1024,\n    desktop2: 1280,\n    desktop3: 1440,\n},\nbreakpointOffset: 25\n/* Example card component */\n@include mobileLandscape {\n    .card {\n        background: blue;\n    }\n}\n\n-+-\n\n/* output */\n@media(min-width: 455px) {\n    .card {\n        background: blue;\n    }\n}\n?> **Note:** Breakpoint names should be camelCase\n"},{"slug":"/v4/build/configuration?id=purgecss","title":"PurgeCSS","body":"[PurgeCSS](https://www.purgecss.com/) is a tool that will remove unused CSS.  The path string can contain glob patterns.  If you just need to set the paths, the following configuration is recommended, otherwise you can set an `options` key which will be passed to purgeCSS.  If you use this option you should omit the `paths` key on the top level.  Check out the full list of [purgeCSS options](https://www.purgecss.com/configuration#configuration-file).\n\npurgeCss: {\n    enabled: false,\n    paths: [\n        'public/index.html',\n    ],\n},\npurgeCss: {\n    enabled: true,\n    options: {\n        whitelist: ['random', 'yep', 'button'],\n        keyframes: true,\n        paths: [\n            'public/index.html',\n        ],\n    },\n},"},{"slug":"/v4/build/configuration?id=additional-configuration","title":"Additional Configuration","body":"Wee provides two different ways to interact with the webpack build process on a per project basis, `configureWebpack` and `chainWebpack`.  The latter uses [chain webpack](https://github.com/neutrinojs/webpack-chain).  Check out the full documentation for usage.  `configureWebpack` gets merged in at the end of the build process using [webpack merge](https://github.com/survivejs/webpack-merge).\n\nconst CoolWebpackPlugin = require('cool-webpack-plugin');\n\nconfigureWebpack: {\n    plugins: [\n        new CoolWebpackPlugin({\n            option: 'thatsNeat',\n        }),\n    ]\n},\nconst CoolWebpackPlugin = require('cool-webpack-plugin');\n\nchainWebpack: (config) => {\n    config.plugin('cool-webpack-plugin')\n        .use(CoolWebpackPlugin, [{\n            option: 'thatsNeat',\n        }])\n        .end();\n},"},{"slug":"/v4/cli/commands?id=commands","title":"Commands","body":""},{"slug":"/v4/cli/commands?id=command","title":"Command","body":"Create new CLI command\n\n"},{"slug":"/v4/cli/commands?id=component","title":"Component","body":"Create component folder and files\n\n"},{"slug":"/v4/cli/commands?id=init","title":"Init","body":"Create a new project\n\n"},{"slug":"/v4/cli/commands?id=run","title":"Run","body":"Run development server\n\n"},{"slug":"/v4/guide/cli?id=cli","title":"CLI","body":"Wee includes an extensible CLI with useful default [commands](/cli/commands). Wee 4 makes starting a new project easy by adding the [init](/cli/commands/init) command, and the CLI was remade on top of [Commander](https://www.npmjs.com/package/commander) to make a more consistent and robust CLI experience. This guide is going to explain how to register custom commands for your project as well as how best to utilize the CLI's built in functionality.\n"},{"slug":"/v4/guide/cli?id=in-and-out-of-a-project","title":"In and Out of a Project","body":"The majority of Wee's commands are registered within [Wee Core](https://github.com/weepower/wee-core). As a result, the help menu `wee --help` seen before creating your first project will not contain most commands listed in the documentation. When `wee --help` is executed inside of a project, the full menu of commands will be available.\n"},{"slug":"/v4/guide/cli?id=custom-commands","title":"Custom Commands","body":"Wee CLI makes it possible to generate and register your own commands. Inside of a current wee project, do the following:\n\n\n\nGenerate a new command with the CLI - `wee command -n new-command`\n\n\nConfigure the newly generated command. It will be located in `source/commands/new-command.js`\n\n\n\nThe `new-command.js` file will look something like this:\n\nconst { logError, logSuccess } = require('../../node_modules/wee-core/utils');\n\nmodule.exports = {\n    name: 'newCommand',\n    description: 'newCommand description here',\n    usage: '- wee newCommand [options]',\n    options: [\n        ['-t, --test <name>', 'option with a value'],\n        ['-t2, --test2', 'option without a value']\n    ],\n    action(config, options) {\n        // Require test option be provided\n        // if (typeof options.test !== 'string') {\n        //     logError('--test is required');\n        //     process.exit();\n        // }\n\n        logSuccess('newCommand command successful');\n    }\n};\nThe command can now be executed as `wee newCommand`. It will print `newCommand command successful` to the terminal when called. Let's look at the properties of this command:\n\n\n\n`name` - The name by which the command is registered.\n\n\n`description` - The description that will be printed out in the CLI help menu. Make sure to update this property.\n\n\n`usage` - The value will output to the help menu for the `newCommmand`.\n\n\n`options` - The set of possible flags that can be passed in with the command.\n\n\n`action` - The logic of the command.\n\n\n\nA couple helper functions are imported into the command: `logError` and `logSuccess`. These can be used when needing to print feedback to the terminal in a formatted way.\n\nAn important note is that [ES Modules](/guide/es-modules) are not used in commands. This is because we are using the module system used in Node.js (CommonJS), the platform that Wee CLI and the build process are built on. So if you need to import any dependencies into a command, use `require` instead of `import`.\n"},{"slug":"/v4/guide/cli?id=wee-3","title":"Wee 3","body":"If you have projects that are using Wee 3, you will notice that the v2 of Wee CLI is not compatible. This could make it difficult since Wee CLI is most likely globally installed on your machine. A workaround for this is to install [wee3-cli](https://www.npmjs.com/package/wee3-cli).\n\nnpm i -g wee3-cli\nOnce installed, you can refer to the Wee 3 compatible CLI with `wee3` as the command.\n\nwee3 run:local\nYou can also install a Wee 3 compatible version locally per project if you would rather.\n\ncd /to/project/directory\nnpm install wee-cli@1.1.0\nOnce installed locally , you can utilize npm to run your local version of the CLI by creating an npm script in your project's `package.json`. When calling a CLI command inside of an npm script, npm first looks for the executable inside of your local `node_modules`. So for example, we could add a script called `start` that will call the CLI command.\n\n\"scripts\": {\n    \"start\": \"wee\"\n}\nNow when you run `npm start` in the console, you should notice that your `defaultCommand` that is defined in your `wee.json` is executed. If you need to add additional arguments, add `--` in between the npm script and your arguments.\n\nnpm start -- run:local"},{"slug":"/v4/guide/esmodules?id=es-modules","title":"ES Modules","body":"Over time, the JavaScript community has had to overcome the increasingly complex ways in which JavaScript is being utilized. As complexity grows, so does the need to manage that complexity in a way that will make a codebase maintainable. One concept that is core to this goal is modularity, or the loose coupling of highly distinct pieces of functionality.\n\nUntil somewhat recently, JavaScript had no good way of building code in a modular fashion. Everything that is written inside of a standard script tag is exposed to the global namespace. There is no inherent separation between different scripts, and therefore the possibility of colliding functions and variables is a very real challenge. One approach to combat this was to nest an entire library of functionality (e.g., jQuery) inside of one big object. That single object would then be the only variable that could be collided with by some other script on the page. Wee historically has used this same basic approach.\n\nWhether using the single global object described above, the [module pattern](http://www.adequatelygood.com/JavaScript-Module-Pattern-In-Depth.html), or a [modular format](https://addyosmani.com/writing-modular-js/) such as CommonJS or AMD, developers have been forced to come up with manual solutions to this problem. However, since the release of ES2015, JavaScript now has it's very own module system. Let's take a look at a simple example:\n\n**Module A**\nexport function greeting() {\n    return 'hello world!';\n}\n**Module B**\nimport { greeting } from './module-a.js';\n\nconsole.log(greeting()); // hello world!\nFrom the example above, we notice a few things:\n\n\n\nWe are defining the function `greeting` and making it available outside of module A by putting the `export` statement in front of the function.\n\n\nThe `greeting` function is made available to module B by using the `import` statement at the top of the file.\n\n\nOnce imported, we can execute  the imported function`greeting`.\n\n\n\nLet's expand on the mechanisms we have identified so far.\n"},{"slug":"/v4/guide/esmodules?id=definition-of-terms","title":"Definition of Terms","body":"Module\nA module is a decoupled and distinct piece of code. This ensures that duplication throughout a codebase is reduced. As a result, modules are often built with reusability in mind. Modules should also have their own scope. That means that variable definitions will not pollute the global namespace, but will be contained to the module where they are written. Any part of a module that is exposed to or brought in from the outside world must be explicitly exposed or included. This allows us to enforce a strict and predictable system for dependent modules to work within.\n\nExport\nThe [export](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/export) statement is used to expose a value from a given module. Multiple values can be exported from a single file. Also, a single `default` export can be defined in a module. Default exports make import statements a little cleaner.\n\n**Named Exports**\n// Module - Example A\nconst myVariable = true;\n\nexport { myVariable }; // exports a variable that was declared earlier\nexport const foo = 'bar'; // exports the variable declaration directly\n**Default Exports**\n// Module - Example B\nexport default function() {};\n**Combined**\n// Module - Example C\nexport const foo = 'bar';\nexport default function() {}\nImport\nThe [import](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import) statement is used to import a value into a module from other outside modules.\n\n**Note:** Examples below are direct continuations of the export examples above.\n\n**Importing individual members**\n// Imported from Example A\nimport { myVariable, foo } from '/path/to/example-a.js';\n**Importing entire module's contents**\n// Imported from Example A\nimport * from '/path/to/example-a.js';\n**Importing default export**\n// Imported from Example B\nimport exampleB from '/path/to/example-b.js';\n**Importing default and named exports**\n// Imported from Example C\nimport exampleC, { foo } from '/path/to/example-c.js';"},{"slug":"/v4/guide/esmodules?id=module-bundling","title":"Module Bundling","body":"As you can hopefully see, ES Modules are great. Unfortunately, they are not supported yet in all browsers. This is where [Webpack](https://webpack.js.org/) comes in. Webpack is a powerful build tool for compiling JavaScript modules together. It solves the problem of browser support for modules by bundling and wrapping all the modules of your application in a browser-compatible way that still retains the integrity of the module system. Unfortunately, this bundling process adds some extra size to the end script file that is served to the browser. Still, we feel that this is a small price to pay for the benefits that modules, and Webpack, bring to Wee.\n\nBecause ES modules explicitly define the dependencies of an application ahead of time with a static structure, Webpack can eliminate dead code (code not imported in the application) in a process known as tree shaking. This can have potentially large reductions in script size for a website. Other optimization techniques such as [common module chunking](https://webpack.js.org/plugins/commons-chunk-plugin/#src/components/Sidebar/Sidebar.jsx) are also available within Wee's build process that utilizes Webpack.\n"},{"slug":"/v4/guide/esmodules?id=wee-implementation","title":"Wee Implementation","body":"Normally, modules are imported by referencing the exact location of a module in the file system relative to the module you are importing from. However, Webpack allows for exceptions to this rule. In the case of Wee, `node_modules` and `wee-core/scripts` are aliased so that importing can be done with brevity.\n\n**Node Modules**\n// Without aliasing - importing from /source/scripts\nimport Vue from '../../node_modules/vue';\n\n// With alias\nimport Vue from 'vue';\n**Wee Core**\n// Without aliasing - importing from /source/scripts\nimport $router from '../../node_modules/wee-core/scripts/wee-routes';\n\n// With alias\nimport $router from 'wee-routes';"},{"slug":"/v4/guide/postcss?id=postcss","title":"PostCSS","body":"Wee has departed from [Less](http://lesscss.org/), a traditional pre-processor, to [PostCSS](http://postcss.org/). This article will clarify what it is, why and how it is being used in Wee 4, and why it is worth knowing about.\n\nAt it's core, PostCSS is simply a tool for transforming CSS with JavaScript. If you are familiar with Less or Sass, you are familiar with the idea of pre-processors and how they define custom syntax to traditional CSS in order to allow for a more powerful set of tools and features for the developer that results in de-duplicated and elegant stylesheets. Using Sass or Less requires a build process for your front-end development that will transform the Sass/Less that you write into raw CSS. PostCSS is a peer in this respect. However, PostCSS is not just a pre-processor. Instead, it is a platform that provides the opportunity to custom tailor the way you compose and distribute CSS.\n\nWe have hopefully explained why we chose to use PostCSS, now let's look at how. Here are the plugins that are currently being used in the order they are being used in Wee:\n\n\n\n[css-mqpacker](https://github.com/simbo/node-css-mqpacker)\n\n\n[autoprefixer](https://www.npmjs.com/package/autoprefixer)\n\n\n[cssnano](https://www.npmjs.com/package/cssnano)\n\n\n\nCSS Mqpacker\nThis plugin packs all of your duplicate media queries into one.\n\n**Before**\n.foo {\n  width: 240px;\n}\n\n@media screen and (min-width: 768px) {\n  .foo {\n    width: 576px;\n  }\n}\n\n.bar {\n  width: 160px;\n}\n\n@media screen and (min-width: 768px) {\n  .bar {\n    width: 384px;\n  }\n}\n**After**\n\n.foo {\n  width: 240px;\n}\n\n.bar {\n  width: 160px;\n}\n\n@media screen and (min-width: 768px) {\n  .foo {\n    width: 576px;\n  }\n  .bar {\n    width: 384px;\n  }\n}\nAutoprefixer\nThis is the defacto PostCSS plugin. If you don't already use it, you should start. In short, it adds vendor prefixes for CSS declarations automatically so you don't have to. Here is an example:\n\n**Before**\n\na {\n    display: flex;\n}\n**After**\n\na {\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex\n}\nCSS Nano\nThis plugin minifies our final CSS output, hence it comes at the end of our plugin chain."},{"slug":"/v4/guide/routes?id=router","title":"Router","body":"Wee comes with a robust routing solution to separate your markup and JavaScript.  There are a couple of different ways to interact with the router and a couple of common patterns we use here at [Lewis Communications](https://www.lewiscommunications.com).\n\nBy default your routes are defined in the `routes.js` file located in the `source/scripts` directory.  By default, the routes file should look like:\n\n// routes.js\n\n/**\n * Dynamically load a component\n *\n * @param {String} component\n */\nconst load = component => import(/* webpackChunkName: \"[request]\" */ `../components/${component}`)\n    .then(m => m.default || m);\n\nexport default [\n    {\n        path: '/',\n        handler: [\n            () => load('welcome'),\n        ],\n    },\n];\nYour routes are imported into the `app.js` file and passed to the `$router.map` function:\n\n// app.js\n\nimport $router from 'wee-routes';\nimport './bootstrap';\nimport routes from './routes';\n\n$router.pjax()\n    .map(routes)\n    .run();\nThere are two ways to import route handler from component files.  The first method is through a standard ES module import and the second is using the dyanmic import proposal.  Note, however, that when using the dynamic imports you'll need to pass a function that returns the dynamic import.  Wee provides a helper function in the `routes.js` file to make this a little simpler.\n\nHere is an example of how you would use a standard ES module import:\n\nimport welcome from '../components/welcome';\n\nexport default [\n    {\n        path: '/',\n        handler: [\n            welcome\n        ],\n    },\n];\nA common pattern we use is to include any common functionality in a `common` or `global` component and set it for each route like:\n\nimport welcome from '../components/welcome';\nimport about from '../components/about';\nimport contact from '../components/contact';\nimport global from '../components/global';\nimport nav from '../components/nav';\n\nconst common = [global, nav];\n\nexport default [\n    {\n        path: '/',\n        handler: [\n            ...common,\n            welcome,\n        ],\n    },\n    {\n        path: '/about',\n        handler: [\n            ...common,\n            about,\n        ],\n    },\n    {\n        path: '/contact',\n        handler: [\n            ...common,\n            contact,\n        ],\n    },\n];\nFor complex routing setups you can split your routes up however it make sense to you so long as they are exported correctly.  Here is an example of how you might accomplish this.\n\n// routes/app.js\n\nexport default [\n    {\n        path: '/',\n        handler: [\n            app,\n        ],\n    },\n];\n\n// routes/foo.js\n\nexport default [\n    {\n        path: '/foo',\n        handler: [\n            foo,\n        ],\n    },\n];\n\n// routes/bar.js\n\nexport default [\n    {\n        path: '/bar',\n        handler: [\n            bar,\n        ],\n    },\n];\n\n// routes.js\n\nimport app from './routes/app.js';\nimport foo from './routes/foo.js';\nimport bar from './routes/bar.js';\n\nexport default [\n    ...app,\n    ...foo,\n    ...bar,\n];\n<!-- By default your routes are defined in the `app.js` file located in `source/scripts`.  This is what the file will look like on a fresh installation of Wee: -->\n\n\n<!-- ```js\nimport $router from 'wee-routes';\nimport './bootstrap';\n\n/**\n * Dynamically load a component\n * @param {String} component\n */\nconst load = component => import(/* webpackChunkName: \"[request]\" */ `../components/${component}`)\n    .then(m => m.default || m);\n\n$router.pjax().map([\n    {\n        path: '/',\n        handler: [\n            () => load('welcome'),\n        ],\n    },\n]).run();\n``` -->\n\n\n\n"},{"slug":"/v4/guide/store?id=store","title":"Store","body":"The store module is for managing data in an application. It is not intended to drive an entire single page application. Instead, it is meant to organize and improve a standard website by making common data shareable across a codebase without contaminating the global namespace. It also allows for easy integration with [LocalStorage][local-storage] and [SessionStorage][session-storage].\n\nimport $store from 'wee-store';\n\n$store.set('globalProp', true);\n$store.get('globalProp'); // true"},{"slug":"/v4/guide/store?id=using-markup-to-set-variables","title":"Using markup to set variables","body":"With any website that is serving only static HTML files, it is a common need to provide data to our JavaScript directly from our markup. Wee has a specific convention for this use-case:\n\n<html>\n    <head></head>\n    <body>\n      <meta data-set=\"prop\" data-value=\"test\">\n    </body>\n</html>\nAny element on the DOM may be given a `data-set` and `data-value` attribute. This will set a property in the store module called `prop` with the value of `test`. You could then access that property like this:\n\nimport $store from 'wee-store';\n\n$store.setVar();\n\nlet prop = $store.get('prop');\nconsole.log(prop); // 'test'\nYou'll notice how we executed `setVar` in the example above. That is how our JavaScript knows to look through the DOM and find these `data-set` and `data-value` pairs, converting those to variables in our `store` module. `setVar` is executed by default in our `bootstrap` module that is imported in Wee's default entry point `app.js`. If you have a custom entry point for your application, make sure to import `bootstrap` or call `setVar` before trying to access those properties.\n"},{"slug":"/v4/guide/store?id=store-scope","title":"Store scope","body":"The default import for the `store` module is an instance of the `Store` class. This means that we can create any number of new `store` instances that can be used however you desire.\n\nimport $store from 'wee-store';\n\n$store.set('globalProp', true);\n$store.get('globalProp'); // true\n\nconst $local = $store.create('local'); // returns instance of Store\n\n$local.set('localProp', true);\n$local.get('localProp'); // true\n$local.get('globalProp'); // undefined\nIt is important to note that `setVar` will set properties on the main `store` module by default. In order to store properties on a custom `store` instance, you need to add another attribute to your markup:\n\n<meta data-store=\"local\" data-set=\"prop\" data-value=\"test\">\nAdding the `data-store` attribute to the example will reserve that property for when `setVar` is called on the `store` instance with the name of `local`.\n"},{"slug":"/v4/guide/store?id=local-and-session-storage","title":"Local and Session Storage","body":"The store module can utilize either [LocalStorage][local-storage] or [SessionStorage][session-storage] to persist data. When using this feature, there are a few things to keep in mind.\n\nBy default, all data added to a `store` instance will be saved in JavaScript, regardless of whether local or session storage is activated on that instance. This is to keep everything functioning as fast as possible. If it is not desirable to house all data in JavaScript, setting `keepInMemory` to `false` will cause the `store` instance to retrieve data directly from local/session storage anytime `$store.get` is called which will be less performant. This may be a preferable option if there is a large-ish (local and session storage limits can be as low as 2mb on certain mobile devices) amount of data in a `store` instance that will be retrieved infrequently. Otherwise, it is best to leave the default settings alone."},{"slug":"/v4/script/assets?id=assets","title":"Assets","body":"Dynamic loading for JavaScript, CSS, and Images\n\nDon’t embed assets on requests where they aren’t needed, or needed immediately. Load what you need on demand to optimize page speed and preserve bandwidth. You can asynchronously (or synchronously) load scripts as well as CSS and images. Work with groups and callbacks to solve complex problems.\n"},{"slug":"/v4/script/assets?id=assetsload","title":"$assets.load","body":"Load assets with specified set of options\n\n\nConfiguration Object\n\nSingle File\nimport $assets from'wee-assets';\n\n$assets.load({\n    files: '/path/to/alert.js',\n    success() {\n        // Success logic\n    },\n    error() {\n        // Failure logic\n    }\n});\nMultiple Files\nimport $assets from'wee-assets';\n\n$assets.load({\n    root: 'https://cdn.weepower.com',\n    files: [\n        '/path/to/alert.js',\n        '/path/to/override.css',\n        '/path/to/sample.png'\n    ],\n    success() {\n        // Success logic\n    },\n    error() {\n        // Failure logic\n    }\n});\nIf an absolute URL beginning with \"//\", \"http://\", or “https://” is requested the root option will be ignored.\n\nGroup\nimport $assets from'wee-assets';\n\n$assets.load({\n    files: '/path/to/alert.js',\n    group: 'dynamicAssets'\n});\n\n$assets.ready('dynamicAssets', {\n    success() {\n        // Success logic\n    },\n    error() {\n        // Failure logic\n    }\n});"},{"slug":"/v4/script/assets?id=assetsready","title":"$assets.ready","body":"When specified references are ready execute callback\n\n\nCheck\nimport $assets from'wee-assets';\n\n$assets.ready('dynamicAssets');\ntrue\nCheck and Set\nimport $assets from'wee-assets';\n\n$assets.ready('dynamicAssets', {\n    success() {\n        // Success logic\n    }\n});"},{"slug":"/v4/script/assets?id=assetsremove","title":"$assets.remove","body":"Remove one or more files from the DOM\n\n\nSingle File\nimport $assets from'wee-assets';\n\n$assets.remove('/samples/override.css');\nMultiple Files\nimport $assets from'wee-assets';\n\n$assets.remove([\n    '/samples/override.css',\n    '/samples/alert.js'\n], 'https://cdn.weepower.com');"},{"slug":"/v4/script/assets?id=assetsroot","title":"$assets.root","body":"Get current asset root or set with specified value\n\n\nSet\nThe value set here is prepended to every request if not specifically overridden.\n\nimport $assets from'wee-assets';\n\n$assets.root('https://cdn.weepower.com');\nGet\nRetrieve the current root which defaults to an empty string, unless previously set.\n\nimport $assets from'wee-assets';\n\n$assets.root();\n\"https://cdn.weepower.com\"\nAdvanced\nOnly set the asset root to a CDN in the production [environment](/script/core#env).\n\nimport { $env } from'core/core';\nimport $assets from'wee-assets';\n\nif ($env() == 'prod') {\n    $assets.root('https://cdn.weepower.com');\n}\nYou can override the root on individual requests. For instance, you may want to load all your static assets from a CDN but pull JSON or other files from a local server."},{"slug":"/v4/script/core?id=core","title":"Core","body":"Foundation of utilities and helpers\n"},{"slug":"/v4/script/core?id=callbacks","title":"Callbacks","body":"Options for callback functions\n\nFunctions passed in as parameters to any Wee API method are evaluated in the same fashion. Usually, an options object will be provided for these Wee API methods that take a callback function that can have the following properties:\n\n"},{"slug":"/v4/script/core?id=chain","title":"$chain","body":"Register a new chainable method for [Wee selections](/script/dom#selection)\n\nimport { $chain } from'core/chain';\nimport $ from'wee-dom';\n\n$chain('setId', function(id) {\n    this.attr('id', id);\n\n    returnthis;\n});\n\n$('.selection').setId('selection');"},{"slug":"/v4/script/core?id=each","title":"$each","body":"Execute function for each matching selection\n\n\nOptions Object\n\nSimple\nimport { $each } from'core/dom';\n\n$each('ref:element', (el, i) => {\n    // Callback logic\n});\nAdvanced\nimport { $each } from'core/dom';\n\n$each('ref:element', (el, i) => {\n    // Callback logic\n}, {\n    reverse: true,\n    scope: this\n});\nThe element and index are injected as the first two callback parameters.\n"},{"slug":"/v4/script/core?id=env","title":"$env","body":"Get current environment or set current environment against specified object\n\n\nSet\nThe key values can either be strings for a direct match or a functions for more complex evaluation. If a function is provided the response should be a boolean. If no match is found the default environment value is used.\n\nimport { $env } from'core/core';\n\n$env({\n    prod: 'www.weepower.com',\n    stage: 'stage.weepower.com'\n});\n\n-+-\n\n'prod'\nGet\nimport { $env } from'core/core';\n\n$env();\n\n-+-\n\n'prod'"},{"slug":"/v4/script/core?id=envsecure","title":"$envSecure","body":"Determine if the current environment is SSL encrypted\n\nimport { $envSecure } from'core/core';\n\n$envSecure();\n\n-+-\n\ntrue"},{"slug":"/v4/script/core?id=equals","title":"$equals","body":"Compare two values for strict equality\n\n\nimport { $equals } from'core/types';\n\n$equals(1, 2);\n$equals({\n    key: true\n}, {\n    key: false\n});\n$equals([1, 2, 3], [1, 2, 3]);\n\n-+-\n\nfalse\nfalse\ntrue"},{"slug":"/v4/script/core?id=exec","title":"$exec","body":"Execute specified function\n\n\nimport { $exec } from'core/core';\n\n$exec(() => {});\nimport { $exec } from'core/core';\n\n$exec((greeting, subject) => {\n    console.log(`${greeting}${subject}`);\n}, {\n    scope: this,\n    args: ['Hello', 'world']\n});\n\n-+-\n\n'Hello world'\nimport { $exec } from'core/core';\n\n$exec([\n    function() {},\n    function() {}\n]);"},{"slug":"/v4/script/core?id=isarray","title":"$isArray","body":"Determine if value is an array\n\n\nimport { $isArray } from'core/types';\n\n$isArray([\n    'string',\n    'string2'\n]);\n\n$isArray('string');\n\n-+-\n\ntrue\nfalse"},{"slug":"/v4/script/core?id=isfunction","title":"$isFunction","body":"Determine if value is a function\n\n\nimport { $isFunction } from'core/types';\n\n$isFunction({});\n$isFunction('string');\n$isFunction(() => {});\n\n-+-\n\nfalse\nfalse\ntrue\ntrue"},{"slug":"/v4/script/core?id=isobject","title":"$isObject","body":"Determine if value is an object\n\n\nimport { $isObject } from'core/types';\n\n$isObject({});\n$isObject('string');\n\n-+-\n\ntrue\nfalse"},{"slug":"/v4/script/core?id=isstring","title":"$isString","body":"Determine if value is a string\n\n\nimport { $isString } from'core/types';\n\n$isString({});\n$isString('string');\n\n-+-\n\nfalse\ntrue"},{"slug":"/v4/script/core?id=map","title":"$map","body":"Translate items in an array or selection to new array\n\nThe callback receives the current element as well as the index.\n\n\n###Array\n\n$map([1, 2, 3], function(val) {\n    return val + 1;\n});\n\n-+-\n\n[2, 3, 4]\nSelection\n$map('ref:element', (el, i) => $(el).text());\n\n-+-\n\n[\"text\", \"text\", ...]"},{"slug":"/v4/script/core?id=parsehtml","title":"$parseHTML","body":"Create document fragment from an HTML string\n\n\nimport { $parseHTML } from'core/dom';\n\nconst docFragment = $parseHTML('<span class=\"testing\">Testing</span>');\n$hasClass(docFragment.childNodes, 'testing');"},{"slug":"/v4/script/core?id=serialize","title":"$serialize","body":"Serialize\n\n\nimport { $serialize } from'core/types';\n\n$serialize({\n    key1: 123,\n    key2: [\n        'value 1',\n        'value 2'\n    ]\n});\n\n-+-\n\nkey1=123&key2[]=value+1&key2[]=value+2\nOnly the first level of the object is serialized.\n"},{"slug":"/v4/script/core?id=setref","title":"$setRef","body":"Add ref elements to datastore\n\nAvailable data-ref values are pushed into the global storage for later retrieval. This method can be called after dynamic content is injected to ensure new refs are available for selection.\n\n\n<div data-ref=\"element\"></div>\nimport { $setRef } from'core/dom';\n\n$setRef();\nimport $ from'wee-dom';\n\n$('ref:element').toArray();\n\n-+-\n\n[<div data-ref=\"element\"></div>]\nThis function is called by default on page load and after relevant DOM manipulation. Subsequent calls clear the cache for the provided context and reset the references.\n"},{"slug":"/v4/script/core?id=toarray","title":"$toArray","body":"Cast value to array if it isn't one\n\n\nimport { $toArray } from'core/types';\n\n$toArray(['test']);\n$toArray('test');\n\n-+-\n\n['test']\n['test']"},{"slug":"/v4/script/core?id=type","title":"$type","body":"Determine the JavaScript type of an object\n\n\nimport { $type } from'core/types';\n\n$type([\n    'string',\n    'string2'\n]);\n$type({});\n$type('string');\n\n-+-\n\narray\nobject\nstring"},{"slug":"/v4/script/core?id=unique","title":"$unique","body":"Create new array with only unique values from source array\n\n\nimport { $unique } from'core/dom';\n\n$unique([1, 1, 2, 3, 3, 3, 4]);\n\n-+-\n\n[1, 2, 3, 4]"},{"slug":"/v4/script/core?id=unserialize","title":"$unserialize","body":"Convert serialized string back into an object\n\n\nimport { $unserialize } from'core/types';\n\n$unserialize('key1=123&key2[]=value+1&key2[]=value+2');\n\n-+-\n\n{\n    \"key1\": \"123\",\n    \"key2[]\": [\n        \"value 1\",\n        \"value 2\"\n    ]\n}"},{"slug":"/v4/script/core?id=isnumber","title":"$isNumber","body":"Determine if value is a number\n\n\nimport { $isNumber } from'core/types';\n\n$isNumber('1');\n$isNumber(1);\n$isNumber('1', false);\n\n-+-\n\nfalse\ntrue\ntrue"},{"slug":"/v4/script/core?id=extend","title":"$extend","body":"Extend target object with source object(s)\n\n\nClone Object\nIf the second argument is an empty object literal, the third object will be cloned.\n\nimport { $extend } from'core/types';\n\n$extend(true, {}, {\n    key1: 'val1',\n    key2: 'val2'\n});\n\n-+-\n\n{\n    key1: \"val1\",\n    key2: \"val2\"\n}\nMerge Objects\nimport { $extend } from'core/types';\n\n$extend({\n    key1: 'val1',\n    key2: 'val2'\n}, {\n    key2: 'val3',\n    key3: 'val4'\n});\n\n-+-\n\n{\n    key1: \"val1\",\n    key2: \"val3\",\n    key3: \"val4\"\n}"},{"slug":"/v4/script/core?id=copy","title":"$copy","body":"Clone provided object\n\n\nimport { $copy } from'core/types';\n\n$copy({\n    key1: 'val1',\n    key2: 'val2'\n});\n\n-+-\n\n{\n    key1: \"val1\",\n    key2: \"val2\"\n}"},{"slug":"/v4/script/dom?id=dom","title":"DOM","body":"Easily interface with the DOM for updates and retrieval\n\nWee makes modifying and extracting data from your markup easy with a robust set of DOM functions. We’ve only included what you need without the cruft. You can also chain your methods.\n"},{"slug":"/v4/script/dom?id=-selection","title":"$ Selection","body":"Get matches to specified selector or return parsed HTML\n\n\nSimple\nimport $ from'wee-dom';\n\n$('.js-element li');\n\n-+-\n\n[node, node, ...]\nContextual\nThe context selection subsets the query to a more specific scope. This can result in a more limited and efficient traversal of the DOM.\n\nimport $ from'wee-dom';\n\n-+-\n\n$('li', '.js-element');\n\n[node, node, ...]\nSelection of DOM elements\nWee accepts any browser-supported selection queries. Internally Wee parses the selection string to invoke the most efficient native selection method and returns an array of matching nodes.\n\nExamples\n$('#id');\n$('.class');\n$('#id .class');\n$('.class1, .class2');\n$('.parent > .child');\ndata-ref\nReferences are a logical approach to selecting elements. They are cached when the page loads making them extremely quick to reference and are more visually distinct in markup than js- classes. Anywhere you can pass a standard selector you can also pass a ‘ref:name’ string.\n\n\n<div data-ref=\"element\"></div>\n\n-+-\n\n$('ref:element');\n\n// Shorthand\n$(':element');\n\nReferences can’t be used in subset selectors like `$('ref:element .child')`. To scope a selection within a reference pass the ref selector as the context argument like `$('.child', 'ref:element')`.\n\nIf multiple references are set with the same name they are pushed into an array and can be targeted with a single ref selection. You can also provide a comma-delimited list of multiple refs.\n\n<div data-ref=\"element\"></div>\n<div data-ref=\"element element2\"></div>\n\n-+-\n\n$('ref:element');\n\n$('ref:element, ref:element2');"},{"slug":"/v4/script/dom?id=eladdclass","title":"$el.addClass","body":"Add classes to each matching selection\n\n\nSingle\nimport $ from'wee-dom';\n\n$('ref:element').addClass('modifier');\nMultiple\nSeparate multiple class names with spaces.\n\nimport $ from'wee-dom';\n\n$('ref:element').addClass('modifier modifier2');\nFunction\nThe current index and class value are injected into the callback. The scope of `this` is the element.\n\nimport $ from'wee-dom';\n\n$('ref:element').addClass(function(i, className) {\n    // Add an indexed classreturn className + i;\n});\nNote: The index argument is always 0-based.\n"},{"slug":"/v4/script/dom?id=elafter","title":"$el.after","body":"Insert selection or markup after each matching selection\n\n\nSelection\nimport $ from'wee-dom';\n\n$('ref:element').after($('.js-element'));\nMarkup\nimport $ from'wee-dom';\n\n$('ref:element').after('<span>Injected notice</span>);\nFunction\nThe current index and HTML are injected into the callback. The scope of `this` is the element.\n\n<div data-name=\"John Smith\">\n    <h1 data-ref=\"bioName\">Name</h1>\n</div>\nimport $ from'wee-dom';\n\n$(ref.bioName').after(function(i, html) {\n    // Add the parent data-name as a paragraph after the matched element\n    return '<p>' + $data.(this).parent('name') + '</p>;\n});\n<div data-name=\"John Smith\">\n    <h1 data-ref=\"bioName\">Name</h1>\n    <p>John Smith</p>\n</div>"},{"slug":"/v4/script/dom?id=elappend","title":"$el.append","body":"Append selection or markup after each matching selection\n\n\nSelection\nimport $ from'wee-dom';\n\n$('ref:element').append($('.js-element'));\nFunction\nThe current index and HTML are injected into the callback. The scope of `this` is the element.\n\n<h1 data-ref=\"listHeading\">Names</h1>\n<ul>\n    <li>John Doe</li>\n    <li>Jane Doe</li>\n</ul>\nimport $ from'wee-dom';\n\n$('ref:listHeading').append(function(i, html){\n    // Modify the heading to include the number of listed namesreturn' (' + $children($next()).length + ')';\n});\n<h1 data-ref=\"listHeading\">Names (2)</h1>\n<ul>\n    <li>John Doe</li>\n    <li>Jane Doe</li>\n</ul>"},{"slug":"/v4/script/dom?id=elattr","title":"$el.attr","body":"Get attribute of first matching selection or set attribute of each matching selection\n\n\nGet\nimport $ from'wee-dom';\n\n$('ref:element').attr('href');\n\n-+-\n\n\"https://www.weepower.com\"\nSingle\nimport $ from'wee-dom';\n\n$('ref:element').attr('href', 'https://www.weepower.com/start');\nMultiple\nimport $ from'wee-dom';\n\n$('ref:element').attr({\n    href: 'https://developer.mozilla.org',\n    target: '_blank'\n});"},{"slug":"/v4/script/dom?id=elbefore","title":"$el.before","body":"Insert selection or markup before each matching selection\n\n\nSelection\nimport $ from'wee-dom';\n\n$('ref:element').before($('.js-element'));\nMarkup\nimport $ from'wee-dom';\n\n$('ref:element').before('<span>Injected notice</span>');\nFunction\nimport $ from'wee-dom';\n\n$('ref:element').before(function(i, html) {\n    //Callback logic\n});"},{"slug":"/v4/script/dom?id=elchildren","title":"$el.children","body":"Get unique direct children of each matching selection\n\n\nAll Children\nWithout a filter all direct children will be returned.\n\nimport $ from'wee-dom';\n\n$('ref:element').children();\nFiltered\nWith a filter, only matching children will be returned.\n\nimport $ from'wee-dom';\n\n$('ref:element').children('li');\nThe response excludes text and comment nodes.\n"},{"slug":"/v4/script/dom?id=elclone","title":"$el.clone","body":"Clone each matching selection\n\nimport $ from'wee-dom';\n\n$('ref.element').clone();"},{"slug":"/v4/script/dom?id=elclosest","title":"$el.closest","body":"Get unique closest ancestors of each matching selection\n\n\n<div class=\"js-nav\">\n    <a class=\"js-link-account\">Your Account</a>\n</div>\n<div class=\"nav\">\n    <a class=\"js-link-about\">About Us</a>\n</div>\nimport $ from'wee-dom';\n\n$('.js-link-about).closest('.js-nav');\n\n +--\n\n<div class=\"js-nav\">\n    <a class=\"js-link-about\">About Us</a>\n</div>\nThis method traverses up the DOM for the closest match. It doesn't match descendants.\n"},{"slug":"/v4/script/dom?id=elcontains","title":"$el.contains","body":"Determine if any matching parent selection contains descendant selection\n\n\nimport $ from'wee-dom';\n\n$('ref:element').contains('.descendant');\n\n-+-\n\ntrue"},{"slug":"/v4/script/dom?id=elcontents","title":"$el.contents","body":"Get unique content of each matching selection\n\n\nimport $ from'wee-dom';\n\n$('ref:element').contents();\nThe response includes text and comment nodes.\n"},{"slug":"/v4/script/dom?id=elcss","title":"$el.css","body":"Get CSS value of first matching selection or set value of each matching selection\n\n\nGet Value\nimport $ from'wee-dom';\n\n$('ref:element').css('marginTop');\n\n-+-\n\n\"0px\"\nSet Single Value\nimport $ from'wee-dom';\n\n$('ref:element').css('marginTop', '5px');\nSet Multiple Values\nimport $ from'wee-dom';\n\n$('ref:element').css({\n    marginTop: '5px',\n    color: 'red'\n});"},{"slug":"/v4/script/dom?id=eldata","title":"$el.data","body":"Get data of first matching selection or set data of each matching selection\n\n\nGet All\n<div data-ref=\"element\" data-id=\"150\"></div>\nimport $ from'wee-dom';\n\n$('ref:element').data();\n\n-+-\n\n{\n    ref: \"element\",\n    id: 150\n}\nGet Single\n<div data-ref=\"element\" data-id=\"150\"></div>\nimport $ from'wee-dom';\n\n$('ref:element').data('id');\n\n-+-\n\n150\nSet Single\nimport $ from'wee-dom';\n\n$('ref:element').data('id', '250');\nSet Multiple\nimport $ from'wee-dom';\n\n$('ref:element').data({\n    id: '350',\n    active: 'true'\n});"},{"slug":"/v4/script/dom?id=eleach","title":"$el.each","body":"Execute function for each element in selection\n\n\nimport $ from'wee-dom';\n\n$('.js-element').each((el, i) => {\n    // Callback logic\n});"},{"slug":"/v4/script/dom?id=elempty","title":"$el.empty","body":"Remove child nodes from each matching selection\n\n<div data-ref=\"bio\">\n    <h1>John Smith</h1>\n    <p>Lorem ipsum dolor.</p>\n</div>\nimport $ from'wee-dom';\n\n$('ref:bio').empty();\n<div data-ref=\"bio\"></div>"},{"slug":"/v4/script/dom?id=eleq","title":"$el.eq","body":"Get indexed node of matching selection\n\n\n<ul class=\"js-element\">\n    <li>List item 1</li>\n    <li>List item 2</li>\n    <li>List item 3</li>\n|</ul>\nimport $ from'wee-dom';\n\n$('.js-element li').eq(1));\n\n-+-\n\n<li>List item 2</li>\nNegative Index\nimport $ from'wee-dom';\n\n$('.js-element li').eq(-1));\n\n-+-\n\n<li>List item 3</li>"},{"slug":"/v4/script/dom?id=elfilter","title":"$el.filter","body":"Return a filtered subset of elements from a matching selection\n\n\nSelection\nimport $ from'wee-dom';\n\n$('ref:element').filter('.filter');\nFunction\nThe current index and element are injected into the callback. The scope of `this` is the element.\n\n<ul class=\"people\">\n    <li>John Doe</li>\n    <li>John Smith</li>\n    <li>Jane Doe</li>\n    <li>Jane Smith</li>\n</ul>\nimport $ from'wee-dom';\n\n$('.people li').filter((i, el) => {\n    //Return elements containing 'Doe'return $text(el).indexOf('Doe') !== -1;\n});\n\n-+-\n\n[<li>John Doe</li>, <li>Jane Doe</li>]"},{"slug":"/v4/script/dom?id=elfind","title":"$el.find","body":"Get unique filtered descendants from each matching selection\n\n\nimport $ from'wee-dom';\n\n$('table').find('tr');"},{"slug":"/v4/script/dom?id=elfirst","title":"$el.first","body":"Get the first element of a matching selection\n\n\nimport $ from'wee-dom';\n\nconst $first = $('ref:element').first();"},{"slug":"/v4/script/dom?id=elhasclass","title":"$el.hasClass","body":"Determine if the matching selection has a class\n\n\nSingle\n<div class=\"hello\" data-ref=\"element\"></div>\nimport $ from'wee-dom';\n\n$('ref:element').hasClass('hello');\n$('ref:element').hasClass('donuts');\n\n-+-\n\ntrue false"},{"slug":"/v4/script/dom?id=elheight-height-doc__title","title":"$el.height ## (#height .doc__title)","body":"Get or set the height of each matching selection\n\n\nGet\nimport $ from'wee-dom';\n\n$('ref:element').height();\n\n-+-\n\n100\nOuter Height\nimport $ from'wee-dom';\n\n$('ref:element').height(true);\n\n-+-\n\n120\nThe value returned is a unitless pixel value.\n\nSet\nimport $ from'wee-dom';\n\n$('ref:element').height('10rem');\nFunction\nThe current index and height are injected into the callback. The scope of `this` is the element.\n\n<div data-ref=\"example\" style=\"height: 100px;\"></div>\nimport $ from'wee-dom';\n\n$('ref:example').height((i, height) => {\n    // Increase the height of the element by 50pxreturn (height += 50) + 'px';\n});\nIf no unit is provided pixels will be set.\n"},{"slug":"/v4/script/dom?id=elhide","title":"$el.hide","body":"Hide each matching selection\n\nHide works by adding the `js-hide` class which applies `display: none !important;`\n\nimport $ from'wee-dom';\n\n$('ref:element').hide();"},{"slug":"/v4/script/dom?id=elhtml","title":"$el.html","body":"Get inner HTML of first selection or set each matching selection's HTML\n\n\n<div data-ref=\"element\">\n    <h1>Heading</h1>\n</div>\nGet\nimport $ from'wee-dom';\n\n$('ref:element').html();\n\n-+-\n\n<h1>Heading</h1>\nSet\nimport $ from'wee-dom';\n\n$('ref:element').html('<h2>New Heading</h2>');\nFunction\nThe current index and HTML are injected into the callback. The scope of `this` is the element.\n\nimport $ from'wee-dom';\n\n$('.js-element').html((el, i, html) => {\n    // Return uppercase HTMLreturn html.toUpperCase();\n});"},{"slug":"/v4/script/dom?id=elindex","title":"$el.index","body":"Get the zero-based index of a matching selection relative to it's siblings\n\n<ul>\n    <li></li>\n    <li></li>\n    <li class=\"js-last\"></li>\n</ul>\nimport $ from'wee-dom';\n\n$('.js-last).index();\n\n-+-\n\n2"},{"slug":"/v4/script/dom?id=elinsertafter","title":"$el.insertAfter","body":"Insert each matching source selection element after each matching target selection\n\n\nimport $ from'wee-dom';\n\n$('ref:element).insertAfter('.js-element');"},{"slug":"/v4/script/dom?id=elinsertbefore","title":"$el.insertBefore","body":"Insert each matching source selection element before each matching target selection\n\n\nimport $ from'wee-dom';\n\n$('ref:element).insertBefore('.js-element');"},{"slug":"/v4/script/dom?id=elis","title":"$el.is","body":"Determine if at least one matching selection matches a specified criteria\n\n\nSelection\n<div class=\"js-element\"></div>\nimport $ from'wee-dom';\n\n$('.js-element').is('div');\n\n-+-\n\ntrue\nFunction\n<ul class=\"names\">\n    <li>John Doe</li>\n    <li data-hidden=\"true\">Jane Doe</li>\n    <li>John Smith</li><li>Jane Smith</li>\n</ul>\nimport $ from'wee-dom';\n\n$('.names li').is((i, el) => {\n    // Check if data-hidden is set to truereturn $(el).is('hidden') === 'true';\n});\n\n-+-\n\ntrue"},{"slug":"/v4/script/dom?id=ellast","title":"$el.last","body":"Get the last element of a matching selection\n\n\n<ul class=\"names\">\n    <li>John Doe</li>\n    <li>John Smith</li>\n    <li>Jane Doe</li>\n    <li>Jane Smith</li>\n</ul>\nimport $ from'wee-dom';\n\n$('.names li').last();\n\n-+-\n\n<li>Jane Smith</li>"},{"slug":"/v4/script/dom?id=elmap","title":"$el.map","body":"Translate items in selection into new array\n\n\n<div class='js-selection'>Hello</div>\n<div class='js-selection'>World</div>\nimport $ from'wee-dom';\n\n$('.js-selection').map((el) => {\n    return el.textContent;\n});\n\n-+-\n\n['Hello', 'World']"},{"slug":"/v4/script/dom?id=elnext","title":"$el.next","body":"Get the unique next sibling of each matching selection\n\n\nSimple\nimport $ from'wee-dom';\n\n$('ref:element').next();\nFiltered\n<ul>\n    <li>John Doe</li>\n    <li>John Smith</li>\n    <li data-ref=\"name\">Jane Doe</li>\n    <li>Jane Smith</li>\n</ul>\nimport $ from'wee-dom';\n\n$('ref:name').next();\n\n-+-\n\n<li>Jane Smith</li>"},{"slug":"/v4/script/dom?id=elnot","title":"$el.not","body":"Returns elements not matching the filtered selection\n\n\nSelection\nimport $ from'wee-dom';\n\n$('ref:element').not('div');\nFunction\nThe current index and element are injected into the callback. The scope of `this` is the element.\n\n<ul class=\"names\">\n    <li>John Doe</li>\n    <li data-hidden=\"true\">Jane Doe</li>\n    <li>John Smith</li><li>Jane Smith</li>\n</ul>\nimport $ from'wee-dom';\n\n$('.names li').not((i, el) => {\n    // Check if data-hidden is set to truereturn $(el).data('hidden') === true;\n});\n\n-+-\n\n[<li>John Doe</li>, <li>John Smith</li>, <li>Jane Smith</li>]"},{"slug":"/v4/script/dom?id=eloffset","title":"$el.offset","body":"Get the offset position of a matching selection relative to the document\n\n\nSet\nimport $ from'wee-dom';\n\n$('ref:element').offset({\n    top: 100,\n    left: 20\n});\nGet\nimport $ from'wee-dom';\n\n$('ref:element').offset();\n\n-+-\n\n{\n    top: 520,\n    left: 30\n}\nThe object values are returned as unitless pixel values.\n"},{"slug":"/v4/script/dom?id=elparent","title":"$el.parent","body":"Get unique parent from each matching selection\n\n\nSelection Parent\nimport $ from'wee-dom';\n\n$('ref:element').parent();\nFiltered\nReturn selection parent only if it matches the filter.\n\nimport $ from'wee-dom';\n\n$('ref:element').parent('main');"},{"slug":"/v4/script/dom?id=elparents","title":"$el.parents","body":"Get unique ancestors of each matching selection\n\n\nimport $ from'wee-dom';\n\n$('ref:element').parents();"},{"slug":"/v4/script/dom?id=elposition","title":"$el.position","body":"Get the position of the first matching selection relative to its offset parent\n\n\nimport $ from'wee-dom';\n\n$('ref:element').position();\n\n-+-\n\n{\n    top: 250,\n    left: 30\n}\nThe object values are returned as unitless pixel values.\n"},{"slug":"/v4/script/dom?id=elprepend","title":"$el.prepend","body":"Prepend selection or markup before each matching selection\n\n\nSelection\nimport $ from'wee-dom';\n\n$('ref:element').prepend($('.js-element'));\nFunction\nThe current index and HTML are injected into the callback. The scope of `this` is the element.\n\n<h1 data-ref=\"listHeading\">Names</h1>\n<ul data-ref=\"list\">\n    <li>John Doe</li>\n    <li>Jane Doe</li>\n</ul>\nimport $ from'wee-dom';\n\n$('ref:listHeading').prepend(() => {\n    return $('ref:list').children().d + ' ';\n});\n<h1 data-ref=\"listHeading\">2 Names</h1>\n<ul data-ref=\"list\">\n    <li>John Doe</li>\n    <li>Jane Doe</li>\n</ul>"},{"slug":"/v4/script/dom?id=elprev","title":"$el.prev","body":"Get the unique previous sibling of each matching selection\n\n\nSimple\nimport $ from'wee-dom';\n\n$('ref:element').prev();\nFiltered\n<ul>\n    <li>John Doe</li>\n    <li>John Smith</li>\n    <li data-ref=\"name\">Jane Doe</li>\n    <li>Jane Smith</li>\n</ul>\nimport $ from'wee-dom';\n\n$('ref:name').prev();\n\n-+-\n\n<li>John Smith</li>"},{"slug":"/v4/script/dom?id=elprop","title":"$el.prop","body":"Get property of first matching selection or set property of each matching selection\n\n\nGet\nimport $ from'wee-dom';\n\n$('ref:element').prop('checked');\n\n-+-\n\ntrue\nSingle\nimport $ from'wee-dom';\n\n$('ref:element').prop('checked', true);\nMultiple\nimport $ from'wee-dom';\n\n$('ref:element').prop({\n    checked: true,\n    required: false\n});"},{"slug":"/v4/script/dom?id=elremove","title":"$el.remove","body":"Remove each matching selection from the document\n\n\nimport $ from'wee-dom';\n\n$('ref:element').remove();"},{"slug":"/v4/script/dom?id=elremoveattr","title":"$el.removeAttr","body":"Remove specified attribute of each matching selection\n\n\nimport $ from'wee-dom';\n\n$('ref:element').removeAttr('title');"},{"slug":"/v4/script/dom?id=elremoveclass","title":"$el.removeClass","body":"Remove classes from each matching selection\n\n\nSingle\nimport $ from'wee-dom';\n\n$('ref:element').removeClass('modifier');\nMultiple\nSeparate multiple class names with spaces.\n\nimport $ from'wee-dom';\n\n$('ref:element')removeClass('modifier modifier2');\nFunction\nThe current index and class value are injected into the callback. The scope of `this` is the element.\n\nimport $ from'wee-dom';\n\n$('ref:element')removeClass((i, className) => {\n    // Remove an indexed classreturn className + i;\n});"},{"slug":"/v4/script/dom?id=elreplacewith","title":"$el.replaceWith","body":"Replace each matching selection with selection or markup\n\n\nSelection\nimport $ from'wee-dom';\n\n$('ref:element').replaceWith($('.js-element'));\nMarkup\nimport $ from'wee-dom';\n\n$('ref:element').replaceWith('<span>Replacement element</span>');\nFunction\nThe current index and HTML are injected into the callback. The scope of `this` is the element.\n\n<ul class=\"names\">\n    <li>John Doe</li>\n    <li>Jane Doe</li>\n</ul>\nimport $ from'wee-dom';\n\n$('.names li').replaceWith((i, html) => {\n    return\"<li>The \" + html + \"</li>\";\n});\n\n-+-\n\n<ul class=\"names\">\n    <li>The Jane Doe</li>\n    <li>The John Doe</li>\n</ul>"},{"slug":"/v4/script/dom?id=elreverse","title":"$el.reverse","body":"Reverse order of selection results\n\nimport $ from'wee-dom';\n\n$('.js-element').reverse();"},{"slug":"/v4/script/dom?id=elscrollleft","title":"$el.scrollLeft","body":"Get or set the X scroll position of each matching selection\n\n\nGet Value\nimport $ from'wee-dom';\n\n$('ref:element').scrollLeft();\n\n-+-\n\n0\nThe value returned is a unitless pixel value.\n\nSet Value\nimport $ from'wee-dom';\n\n$('ref:element').scrollLeft(15);\nScroll position should be provided as unitless pixel value.\n"},{"slug":"/v4/script/dom?id=elscrolltop","title":"$el.scrollTop","body":"Get or set the Y scroll position of each matching selection\n\n\nimport $ from'wee-dom';\n\n$('ref:element').scrollTop();\n\n-+-\n\n1560\nThe value returned is a unitless pixel value.\n\nSet Value\nimport $ from'wee-dom';\n\n$('body').scrollTop(15);\nScroll position should be provided as unitless pixel value.\n"},{"slug":"/v4/script/dom?id=elserializeform","title":"$el.serializeForm","body":"Serialize input values from first matching form selection\n\n\nStandard\nimport $ from'wee-dom';\n\n$('ref:element').serializeForm();\n\n-+-\n\n\"inputName=value&inputName2=value2\"\nJSON\nimport $ from'wee-dom';\n\n$('ref:element').serializeForm(true);\n\n-+-\n\n{\n    \"inputName\": \"value\",\n    \"inputName2\": \"value2\"\n}"},{"slug":"/v4/script/dom?id=elshow","title":"$el.show","body":"Show each matching selection\n\nShow works by removing the `js-hide` class either set manually or through [$el.hide()](#hide).\n\nimport $ from'wee-dom';\n\n$('ref:element').show();"},{"slug":"/v4/script/dom?id=elsiblings","title":"$el.siblings","body":"Get unique siblings of each matching selection\n\n\n<p>Sibling paragraph</p>\n<span>Sibling span</span>\n<div data-ref=\"sibling\">Target div.</div>\nAll Siblings\nWithout a filter all siblings will be returned.\n\nimport $ from'wee-dom';\n\n$('ref:sibling').siblings();\n\n-+-\n\n[<p>Sibling paragraph</p>, <span>Sibling span</span>]\nFiltered\nimport $ from'wee-dom';\n\n$(ref:sibling).siblings('p');\n\n-+-\n\n[<p>Sibling paragraph</p>]"},{"slug":"/v4/script/dom?id=elslice","title":"$el.slice","body":"Get subset of selection matches from specified range\n\n\nimport $ from'wee-dom';\n\n$('li').slice(0, 3);"},{"slug":"/v4/script/dom?id=eltext","title":"$el.text","body":"Get inner text of first selection or set each matching selection's text\n\n\n<div class=\"js-element\">Inner text</div>\nGet\nimport $ from'wee-dom';\n\n$('.js-element').text();\n\n-+-\n\n\"Inner text\"\nSet\nimport $ from'wee-dom';\n\n$('.js-element').text('New text');\nFunction\nThe current index and text are injected into the callback. The scope of `this` is the element.\n\nimport $ from'wee-dom';\n\n$('.js-element').text((el, i , text) => {\n    // Return uppercase textreturn text.toUpperCase();\n});"},{"slug":"/v4/script/dom?id=eltoarray","title":"$el.toArray","body":"Cast selection to array\n\nimport $ from'wee-dom';\n\n$('.js-elements').toArray();"},{"slug":"/v4/script/dom?id=eltoggle","title":"$el.toggle","body":"Toggle the display of each matching selection\n\nRotates calling the [hide]() and [show]() methods.\n\nimport $ from'wee-dom';\n\n$(ref:element').toggle();"},{"slug":"/v4/script/dom?id=eltoggleclass","title":"$el.toggleClass","body":"Toggle adding and removing class(es) from the specified element\n\n\nSingle\nimport $ from'wee-dom';\n\n$('ref:element').toggleClass('modifier');\nMultiple\nSeparate multiple class names with spaces.\n\nimport $ from'wee-dom';\n\n$('ref:element').toggleClass('modifier modifier2');\nFunction\nThe current index, class value and state are injected into the callback. The scope of `this` is the element.\n\nimport $ from'wee-dom';\n\n$('.element').toggleClass((i, className, state) => {\n    // Return the class intended for togglereturn className + (state === true ? '-on' : '-off);\n});"},{"slug":"/v4/script/dom?id=elval","title":"$el.val","body":"Get value of first matching selection or set values of each matching selection\n\n\nGet\nimport $ from'wee-dom';\n\n$('ref:element').val();\nSet\nimport $ from'wee-dom';\n\n$('ref:element').val('123');\nFunction\nThe current index and value are injected into the callback. The scope of `this` is the element.\n\n<input type=\"text\"value=\"This is an ordinary sentence in an input field.\" data-ref=\"input\">\nimport $ from'wee-dom';\n\n$('ref:input').val((i, value) => {\n    // Check the length of the current value but don't change the valueif (value.length > 20) {\n        alert('Getting long winded, aren\\'t we?');\n    }\n    return value;\n});"},{"slug":"/v4/script/dom?id=elwidth","title":"$el.width","body":"Get or set the width of each matching selection\n\n\nGet\nimport $ from'wee-dom';\n\n$('ref:element').width();\n100\nThe value returned is a unitless pixel value.\n\nSet\nimport $ from'wee-dom';\n\n$('ref:element').width('10rem');\nFunction\nThe current index and width are injected into the callback. The scope of `this` is the element.\n\n<div data-ref=\"example\" style=\"width: 100px;\"></div>\nimport $ from'wee-dom';\n\n$('ref:example').width((i, width) => {\n    // Increase the width of the element by 50pxreturn (width += 50) + 'px';\n});\nIf no unit is provided pixels will be set.\n"},{"slug":"/v4/script/dom?id=elwrap","title":"$el.wrap","body":"Wrap markup around each matching selection\n\n\nMarkup\nimport $ from'wee-dom';\n\n$('ref:element').wrap('<div class=\"wrapper\"></div>');\nFunction\nThe current index is injected into the callback. The scope of `this` is the element.\n\n<div class=\"library\">\n    <ul class=\"books programming\">\n        <li>JavaScript: The Definitive Guide</li>\n        <li>Mastering Regular Expressions</li>\n    </ul>\n    <ul class=\"books technique\">\n        <li>Code Complete</li>\n        <li>The Pragmatic Programmer</li>\n    </ul>\n</div>\nimport $ from'wee-dom';\n\n$('.books').wrap(function(i) {\n    if ($(this).hasClass('programming')) {\n        return'<div class=\"reference\"></div>'\n    } else {\n        return'<div class=\"readers\"></div>'\n    }\n});\n<div class=\"library\">\n    <div class=\"reference\">\n        <ul class=\"books programming\">\n            <li>JavaScript: The Definitive Guide</li>\n            <li>Mastering Regular Expressions</li>\n        </ul>\n    </div>\n    <div class=\"readers\">\n        <ul class=\"books technique\">\n            <li>Code Complete</li>\n            <li>The Pragmatic Programmer</li>\n        </ul>\n    </div>\n</div>"},{"slug":"/v4/script/dom?id=elwrapinner","title":"$el.wrapInner","body":"Wrap markup around the content of each matching selection\n\n\nMarkup\nimport $ from'wee-dom';\n\n$('ref:element').wrapInner('<div class=\"wrapper\"></div>);\nFunction\nThe current index is injected into the callback. The scope of `this` is the element.\n\n<ul class=\"names\">\n    <li class=\"boss\">Jane Doe</li>\n    <li>John Doe</li>\n</ul>\nimport $ from'wee-dom';\n\n$('.names li').wrapInner(function(i) {\n    // Wrap bosses in bold tagif ($(this).hasClass('boss')) {\n        return'<b></b>';\n    }\n});\n\n-+-\n\n<ul class=\"names\">\n    <li class=\"boss\"><b>Jane Doe</b></li>\n    <li>John Doe</li>\n</ul>"},{"slug":"/v4/script/events?id=events","title":"Events","body":"Event binding to attach functionality to elements\n\nCreate organized interaction on your page with Wee’s simple event API. Support for mouseenter and mouseleave is baked in.\n"},{"slug":"/v4/script/events?id=eventsaddevent","title":"$events.addEvent","body":"Add a custom event\n\n\nimport $events from'wee-events';\n\n$events.addEvent('pressHold', function(el, fn, conf) {\n    let scope = this;\n    let duration = conf.duration || 400;\n\n    $events.on(el, 'mousedown.pressHold', (e, el) => {\n        scope.timer = setTimeout(function() {\n            scope.timer = false;\n\n            fn.apply(conf.scope || el, W._slice.call(arguments));\n        }, duration);\n    }, conf);\n\n    $.on(el, 'mouseup.pressHold', () => {\n        if (scope.timer) {\n            clearTimeout(scope.timer);\n        }\n    });\n}, (el, fn) => {\n    $events.off(el, 'mouseup.pressHold', fn);\n});\n\n$events.on('ref:element', 'pressHold', (e, el) => {\n    // Trigger logic\n});"},{"slug":"/v4/script/events?id=eventsbound","title":"$events.bound","body":"Get currently bound events to optional specified element, event, and function\n\n\nBy default bound will return all bound events.\n\nimport $events from'wee-events';\n\n$events.bound();\n\n-+-\n\n[Object, Object, ...]\nSelection\n$bound('ref:element');\n\n-+-\n\n[Object, Object, ...]\n@election Event\n$bound('ref:element', 'click');\n\n-+-\n\n[Object, Object, ...]"},{"slug":"/v4/script/events?id=eventsoff","title":"$events.off","body":"Remove specified function to specified element and optional event and function\n\n\nTarget\nIf no event or callback is provided all element events will be removed.\n\nimport $events from'wee-events';\n\n$events.off('ref:element');\nSelection Event\nimport $events from'wee-events';\n\n$off('ref:element', 'click');\nSelection Event Callback\nimport $events from'wee-events';\n\n$events.off('ref:element', 'click', (e, el) => {\n    // Click logic\n});\nMultiple Selections\nimport $events from'wee-events';\n\n$events.off({\n    'ref:element': {\n        mouseenter: function() {\n            // Enter logic\n        }\n    },\n    '.js-element': {\n        click: function(e, el) {\n            // Click logic\n            e.preventDefault();\n        }\n    }\n});\nGlobal\nYou can remove entire groups of namespaced events.\n\nimport $events from 'wee-events';\n\n$events.off(false, '.namespace');"},{"slug":"/v4/script/events?id=eventson","title":"$events.on","body":"Bind specified function to specified element and event\n\n\n\nSimple\nimport $events from 'wee-events';\n\n$events.on('ref:element', 'click', (e, el) => {\n    // Click logic\n    e.preventDefault();\n});\nOnce\nimport $events from 'wee-events';\n\n$events.on('ref:element', 'click', (e, el) => {\n    // Click logic\n    e.preventDefault();\n}, {\n    once: true,\n});\nDelegation\nimport $events from 'wee-events';\n\n$events.on('.js-descendant', 'click', (e, el) => {\n    // Click logic\n    e.preventDefault();\n}, {\n    delegate: 'ref:element',\n});\nMultiple Events\nimport $events from'wee-events';\n\n$events.on('ref:element', {\n    click() {\n        // Click logic\n    },\n    blur() {\n        // Blur logic\n    },\n});\nMultiple Selections\nimport $events from 'wee-events';\n\n$events.on({\n    'ref:element': {\n        mouseenter() {\n            // Enter logic\n        }\n    },\n    '.js-element': {\n        click(e, el) {\n            // Click logic\n            e.preventDefault();\n        }\n    }\n});\nNamespacing\nEvents can be namespaced by appending ‘.namespace’ to the end of the event name. Namespaced events can then be selected, modified, and destroyed as a group.\n\nimport $events from 'wee-events';\n\n$events.on('ref:element', 'click.namespace', (e, el) => {\n    // Click logic\n    e.preventDefault();\n});\nimport $events from 'wee-events';\n\n$events.on({\n    'ref:element': {\n        click(e, el) {\n        // Click logic\n        e.preventDefault();\n    },\n    '.js-element': {\n        click(e, el) {\n            // Click logic\n            e.preventDefault();\n        }\n    }\n}, {\n    namespace: 'namespace',\n});"},{"slug":"/v4/script/events?id=eventstrigger","title":"$events.trigger","body":"Execute event for each matching selection\n\n\nimport $events from'wee-events';\n\n$events.trigger('ref:element', 'click');"},{"slug":"/v4/script/fetch?id=fetch","title":"Fetch","body":"Data request and binding functions\n"},{"slug":"/v4/script/fetch?id=response","title":"Response","body":"Response object returned by all requests\n\nProperties\n"},{"slug":"/v4/script/fetch?id=fetch-1","title":"$fetch","body":"Make Ajax request\n\n\nOptions Object\n\nGet\nimport $fetch from'wee-fetch';\n\n$fetch({ url: '/api.test' }).then((response) => {\n    console.log(response.data.ok);\n}).catch((error) => {\n    console.error(error);\n});\nJsonp\nimport $fetch from'wee-fetch';\n\n$fetch({\n    url: '/api.test',\n    jsonp: true\n}).then((response) => {\n    console.log(response.data.ok);\n}).catch((error) => {\n    console.error(error);\n});\nPost with Data\nimport $fetch from'wee-fetch';\n\n$fetch({\n    url: '/contact-form',\n    method: 'post',\n    data: {\n        name: 'Kevin',\n        email: 'kevin@gmail.com'\n    }\n}).then(response => {\n    console.log(response.status);\n}).catch((error) => {\n    console.error(error);\n});\nInstantiation\nFetch can be instantiated. This is useful for when you want to set base configurations once that will be used for multiple requests in the future.\n\nimport $fetch from'wee-fetch';\n\nconst apiFetch = $fetch.create({\n  baseUrl: 'https://some-domain.com/api',\n  timeout: 1000,\n  headers: { 'X-Custom-Header': 'foobar' }\n});\n\napiFetch({\n    url: 'users', // URL will be appended to baseURL\n}).then((response) => {\n    console.log(response);\n}).catch((error) => {\n    console.log(error);\n});"},{"slug":"/v4/script/fetch?id=fetchpost","title":"$fetch.post","body":"Convenience method for performing post requests\n\nParameters\n\nSimple\nimport $fetch from'wee-fetch';\n\n$fetch.post('/api/users', { name: 'Tom', email: 'tommy1@gmail.com' })\n  .then(response =>console.log(response))\n  .catch(error =>console.error(error));\nWith Options\nimport $fetch from'wee-fetch';\n\n$fetch.post('/api/users', { name: 'Tom', email: 'tommy1@gmail.com' }, {\n  responseType: 'text'\n}).then(response =>console.log(response))\n  .catch(error =>console.error(error));"},{"slug":"/v4/script/fetch?id=fetchput","title":"$fetch.put","body":"Convenience method for performing put requests\n\nParameters\n\nSimple\nimport $fetch from'wee-fetch';\n\n$fetch.put('/api/users/1', { name: 'Tom Haverford', email: 'tommy1@gmail.com' })\n  .then(response =>console.log(response))\n  .catch(error =>console.error(error));\nWith Options\nimport $fetch from'wee-fetch';\n\n$fetch.put('/api/users/1', { name: 'Tom Haverford', email: 'tommy1@gmail.com' }, {\n  responseType: 'text'\n}).then(response =>console.log(response))\n  .catch(error =>console.error(error));"},{"slug":"/v4/script/fetch?id=fetchpatch","title":"$fetch.patch","body":"Convenience method for performing patch requests\n\nParameters\n\nSimple\nimport $fetch from'wee-fetch';\n\n$fetch.patch('/api/users', { name: 'Tom Haverford' })\n  .then(response =>console.log(response))\n  .catch(error =>console.error(error));\nWith Options\nimport $fetch from'wee-fetch';\n\n$fetch.patch('/api/users', { name: 'Tom Haverford' }, {\n  responseType: 'text'\n}).then(response =>console.log(response))\n  .catch(error =>console.error(error));"},{"slug":"/v4/script/fetch?id=fetchget","title":"$fetch.get","body":"Convenience method for performing get requests\n\nParameters\n\nSimple\nimport $fetch from'wee-fetch';\n\n$fetch.get('/api/users')\n  .then(response =>console.log(response))\n  .catch(error =>console.error(error));\nWith Options\nimport $fetch from'wee-fetch';\n\n$fetch.get('/api/users', {\n  responseType: 'document'\n}).then(response =>console.log(response))\n  .catch(error =>console.error(error));"},{"slug":"/v4/script/fetch?id=fetchdelete","title":"$fetch.delete","body":"Convenience method for performing delete requests\n\nParameters\n\nSimple\nimport $fetch from'wee-fetch';\n\n$fetch.delete('/api/users')\n  .then(response =>console.log(response))\n  .catch(error =>console.error(error));\nWith Options\nimport $fetch from'wee-fetch';\n\n$fetch.delete('/api/users', {\n  responseType: 'document'\n}).then(response =>console.log(response))\n  .catch(error =>console.error(error));"},{"slug":"/v4/script/location?id=location","title":"Location","body":""},{"slug":"/v4/script/location?id=locationsegments","title":"$location.segments","body":"Retrieve the current location's path segments as an array or individual segment by index\n\nParameters\n\nimport $location from'wee-location';\n\n// Current URL is https://weepower.com/script/location\n$location.segments();\n$location.segments(1);\n\n-+-\n\n['script', 'location']\n'location'"},{"slug":"/v4/script/location?id=locationuri","title":"$location.uri","body":"Retrieve information about current location or parse a provided URL\n\nParameters\n\nReturn Value\n\nimport $location from'wee-location';\n\n$location.uri('https://origin.com:80/path/to/page?prop1=test#some-hash');\n\n-+-\n\n{\n    fullPath: '/path/to/page?prop1=test#some-hash',\n    hash: 'some-hash',\n    path: '/path/to/page',\n    search: '?prop1=test',\n    query: { prop1: 'test' },\n    segments: ['path', 'to', 'page'],\n    url: 'https://origin.com/path/to/page?prop1=test#some-hash',\n    origin: 'https://origin.com',\n    protocol: 'https',\n    port: '80'\n}"},{"slug":"/v4/script/mediator?id=mediator","title":"Mediator","body":""},{"slug":"/v4/script/mediator?id=mediatoremit","title":"$mediator.emit","body":"Publish to topic\n\nParameters\n\nimport $mediator from'wee-mediator';\n\n$mediator.on('message', (subject, message) => {\n    console.log(subject);\n    console.log(message);\n});\n\n$mediator.emit('message', 'Test', 'Can you hear me?');\n\n-+-\n\n'Test'\n'Can you hear me?'"},{"slug":"/v4/script/mediator?id=mediatoron","title":"$mediator.on","body":"Subscribe to topic\n\nParameters\n\nimport $mediator from'wee-mediator';\n\n$mediator.on('message', (subject, message) => {\n    console.log(subject);\n    console.log(message);\n});\n\n$mediator.emit('message', 'Test', 'Can you hear me?');\n\n'Test'\n'Can you hear me?'"},{"slug":"/v4/script/mediator?id=mediatorremove","title":"$mediator.remove","body":"Remove subscriber by id or all subscribers from topic\n\nParameters\n\nRemove by Function\nimport $mediator from'wee-mediator';\n\nconst callback = functionsubscriber() {\n    console.log('message published to subscriber 1');\n};\n$mediator.on('message', callback);\n$mediator.on('message', () => {\n    console.log('message published to subscriber 2');\n});\n\n$mediator.remove('message', callback);\n\n$mediator.emit('message');\n\n-+-\n\n'message published to subscriber 2'\nRemove by Id\nimport $mediator from'wee-mediator';\n\n$mediator.on('message', () => {\n    console.log('message published to subscriber 1');\n});\n\nconst subscriber = $mediator.on('message', () => {\n    console.log('message published to subscriber 2');\n});\n\n$mediator.remove('message', subscriber.id);\n\n$mediator.emit('message');\n\n-+-\n\n'message published to subscriber 1'\nRemove all Subscribers\nimport $mediator from'wee-mediator';\n\n$mediator.on('message', () => {\n    console.log('message published to subscriber 1');\n});\n$mediator.on('message', () => {\n    console.log('message published to subscriber 2');\n});\n\n$mediator.remove('message'); // Removes all subscribers from this topic"},{"slug":"/v4/script/routes?id=routes","title":"Routes","body":"Associate request endpoints to specified application logic\n\nRoutes create independence between your markup and JavaScript.  It also allows us to easily integrate [HTML5 History](https://developer.mozilla.org/en-US/docs/Web/API/History).  Wee routing serves as the blueprint for your project's JavaScript.\n"},{"slug":"/v4/script/routes?id=lifecycle-methods","title":"Lifecycle Methods","body":"Lifecycle methods hook into the router and execute at key points in the route evaluation process.\n\nThe following methods can be registered in a [route handler](#route-handlers) and/or directly on [route records](#records). Lifecycle methods execute in the order that they are listed.\n\nParameters\n\nBefore\nThe before method is available only to [route records](#records) and will execute after the route is matched and before any other registered methods are executed. This method receives a third parameter. This parameter is a function that must be executed before the other methods registered to the route will evaluate.\n\n**Fetching Data**\n\nAsynchronous actions can be taken from within `before`, preventing further evaluation of the matched route record until `next` is executed.\n\nimport $router from 'wee-routes';\nimport admin from './admin';\nimport $fetch from 'wee-fetch';\n\n$router.map([\n    {\n        path: '/admin',\n        handler: admin,\n        before(to, from, next) {\n            $fetch('/data.json').then(() => next());\n        }\n    }\n]).run();\n**Guards**\n\nBecause the `next` function must be executed for evaluation of the route record to continue, before methods can act as a guard. You can halt evaluation of the route record by passing `false` to the `next` function.\n\nimport $router from 'wee-routes';\nimport admin from './admin';\n\n$router.map([\n    {\n        path: '/admin',\n        handler: admin,\n        before(to, from, next) {\n            if (notAuthorized) {\n              // Stop evaluation and go no further\n              next(false);\n            } else {\n              // Continue\n              next();\n            }\n        }\n    }\n]).run();\nBefore Init\nThe beforeInit method is the same as the before method except that it is available only to [route handlers](#route-handlers). It will execute after the route is matched and before any other registered methods are executed except a before method registered on the matched [record](#records). This method fires only if the previously matched route record is different from the currently matched record.\n\nBefore Update\nThe beforeUpdate method is the same as the before method except that it is available only to [route handlers](#route-handlers). It will execute after the route is matched and before any other registered methods are executed except a before method registered on the matched [record](#records). This method fires if the user navigates to the same page as they were previously.\n\nInit\nThe init method fires only if the previously matched route record is different from the currently matched record. In simpler terms, the init method fires the first time that the user visits a section of a website. This makes it easier to distinguish initialization of a page from logic that updates a page.\n\nimport $router from 'wee-routes';\n\n$router.map([\n    { path: '/', init(to, from) {} }\n]).run();\nUpdate\nThe update method fires if the user navigates to the same page as they were previously. A common example of this would be when a filter of some kind is updated by the user that changes the query string value of the URL. The same route record will match, however the page will need to be adjusted to match the constraints of the updated filter.\n\nimport $router from 'wee-routes';\n\n$router.map([\n    { path: '/', init(to, from) {}, update(to, from) {} }\n]).run();\nUnload\nThe unload method evaluates when navigating away from a route. This is relevant when [PJAX](#pjax) has been enabled and navigation on the site is using [History](https://developer.mozilla.org/en-US/docs/Web/API/History). In this case, we may need to clean up after ourselves to prevent a memory leak. The unload method makes it easy to do this.\n\nThis method takes either function or a namespace. If a namespace is provided, Wee will destroy anything generated or bound by `wee-events`, `wee-screen`, and `wee-store` registered with the same namespace.\n\nimport $router from 'wee-routes';\nimport admin from './admin';\nimport home from './home';\n\n$router.map([\n    { path: '/admin', handler: adminHandler, unload(to, from) {} }, // Providing function\n    { path: '/', handler: home, unload: 'home' } // Providing namespace\n]).run();\nAfter\nThe after method will execute after all other methods have completed. Unlike the before method, this method is not passed a `next` function.\n\nimport $router from 'wee-routes';\n\n$router.map([\n    { path: '/admin', after(to, from) {} }\n]).run();"},{"slug":"/v4/script/routes?id=matches","title":"Matches","body":"A route match represents the state of the current active or previous route. This object is passed as the `to` and `from` parameters that are passed into [lifecycle methods](#methods) as well as to other configuration methods such as `scrollBehavior` and `transition`.\n\nProperties\n"},{"slug":"/v4/script/routes?id=records","title":"Records","body":"Route records are objects that map a URL to parts of your application.\n\nWhen a route record is matched, the callbacks defined on that record are executed in a specific order. At a minimum, route records must consist of a `path` and either a `handler` or `init` property.\n\nProperties\n\nPath\nThe path is the url that you wish to match. Paths can take an assortment of syntaxes. The full list of possible options are described in [path-to-regexp](https://github.com/pillarjs/path-to-regexp), the package that Wee Routes uses for evaluating routes. Below is a description of some of these options.\n\n**Wildcards and Parameters**\n\nYou may use `*` to indicate a wildcard segment.  If you wish to capture that segment and pass it to your function, you use parameters which are names preceded by a colon, i.e `:id`.  Route parameters will be accessible in the route object which is passed to the various callbacks registered on a matched route record.\n\nimport $router from 'wee-routes';\nimport { blog } from './blog';\n\n$router.map([\n    { path: '/blog/:id', handler: blog },\n    { path: '*', init(to, from) {} }\n]).run();\n\n// and in `./scripts/blog`exportfunctionblog(route) {\n// route.params.id will now be the matched segment.\n}\n**Optional Parameters**\n\nYou can make parameters in a path optional by adding a `?` to the end of the parameter. For example we could change the path example above:\n\n{ path: '/blog/:id?', handler: blog }\nThis route record would now match for either `/blog` or `/blog/1`.\n\nName\nThe routes name allows you to reference the route by name, regardless of any changes to the path.\n\nimport $router from 'wee-routes';\nimport adminHandler from './admin';\n\n$router.map([\n    { name: 'admin', path: '/admin', handler: adminHandler }\n]).run();\nMeta\nSometimes you may want to pass specific properties into the registered functions for a route record. This can be accomplished through the meta property.\n\nimport $router from 'wee-routes';\nimport adminHandler from './admin';\n\n$router.map([\n    { path: '/admin', handler: adminHandler, meta: { isAdmin: true } }\n]).run();\n\n// and in './scripts/admin'exportdefault\n\nnew RouteHandler {\n    init(to) {\n        console.log(to.meta.isAdmin); // true\n    }\n}\nHandler\nThe handler property can take a [Route Handler](#route-handlers) or an array of Route Handlers.\n\nimport $router from 'core/router';\nimport blogHandler from './blog';\nimport commonHandler from './common';\nimport socialHandler from '../components/social';\nimport commentsHandler from '../components/comments';\n\nconst common = [commonHandler];\n\n$router.map([\n    { path: '/', handler: common },\n    {\n        path: '/blog/:id',\n        handler: [blogHandler, socialHandler, commentsHandler, ...common],\n    },\n]).run();\nChildren\nYou may nest routes under the `children` key.  It will accept an array of routes, structured exactly as the original route record is structured and supports all of the same options.\n\n***Note:**  You must omit the parent segment from the child paths\n\nWhen a child route is matched, this causes both the child route and it's parent route to be evaluated (parent -> children).\n\nimport $router from 'wee-routes';\nimport adminHandler from './admin';\nimport postHandler from './post';\n\n$router.map([\n    {\n        path: '/admin',\n        handler: adminHandler,\n        children: [\n            { path: 'post', handler: postHandler }\n        ]\n    }\n]).run();"},{"slug":"/v4/script/routes?id=route-handlers","title":"Route Handlers","body":"Route Handlers are special objects that are used throughout an application to define router functionality. They can greatly clean up your route mapping by housing the various functions in their own file/module.\n\nimport $router from 'wee-routes';\nimport about from './about';\n\n$router.map([\n    {\n        path: '/about',\n        before() {},\n        init() {},\n        update() {},\n        after() {}\n    }\n]).run();\n\n// becomes\n$router.map([\n    { path: '/about', handler: about }\n]).run();\nIn the `about` module, you would export a `RouteHandler` instance with some or all of the following methods:\n\nimport { RouteHandler } from 'wee-routes';\n\nexport default new RouteHandler({\n    beforeInit(to, from, next) {\n        // ...\n    },\n    init(to, from) {\n        // ...\n    },\n    beforeUpdate(to, from, next) {\n        // ...\n    },\n    update(to, from) {\n        // ...\n    },\n    unload: 'about',\n    after(to, from) {\n\n    }\n});\nThere are other, larger benefits to using Route Handlers besides cleaning up your main route file. Since Route Handlers will live inside page-specific modules, your Route Handler functions will have access to all page-specific variables and data. This works the other direction as well. If you need to dynamically retrieve any data with an AJAX request in a `beforeInit` hook for a particular page, for example, you can easily pass that data to your page-specific code.\n\nLastly, Route Handlers can be shared between multiple route records. This can be advantageous because you may, for example, have a common set of logic that you want triggered on every page. However, you may need that common module updated independently, rather than initialized, when the route record is being processed for the first time because the route handler was already initialized on a different route. This is easily achievable with Route Handlers.\n\nimport $router from 'wee-routes';\nimport common from './common';\nimport home from './home';\nimport about from './about';\n\n$router.map([\n    { path: '/', handler: [common, home] },\n    { path: '/about', handler: [common, about] }\n]);\n\n$router.run('/'); // home.init and common.init will fire\n$router.run('/about'); // about.init and common.update will fire\nHandler Methods\nRoute Handlers have a specific set of possible methods/properties. Many of these are the same as route records, however there are some important additions. `beforeUpdate` and `beforeInit` are added to give more control over possible data fetching or module bootstrapping.\n\n"},{"slug":"/v4/script/routes?id=router-1","title":"Router","body":"The router is a method that can take an options object. This configuration object will affect how routing behaves.It also has all of the route API methods chained to it. This allows us to initialize routes in one of two ways:\n\nimport $router from 'wee-routes';\n\n// With custom configuration\n$router({\n    scrollBehavior() {},\n    transition: {},\n}).map().run();\n\n// Using router defaults\n$router.map().run();\nOptions\n\nScroll Behavior\nWhen navigating a user with [History](https://developer.mozilla.org/en-US/docs/Web/API/History), we may want to scroll to the top of the page, or preserve the scrolling position of history entries just like the browser does during a full page reload (or some other custom behavior). This is controlled with the `scrollBehavior` function. The default scroll functionality would look like this if passed in manually to the router:\n\nimport $router from 'wee-routes';\n\n$router({\n    scrollBehavior(to, from, savedPosition) {\n        if (savedPosition) {\n            return savedPosition;\n        } else {\n            return { x: 0, y: 0 };\n        }\n    }\n});\nParameters\n\nThe savedPosition parameter exists if the navigation was triggered with the [popstate event](https://developer.mozilla.org/en-US/docs/Web/Events/popstate) and therefore has the saved scroll state from when the page was previously visited.\n\nTransitions\nTransitions allow for a smooth experience when navigating with the router. The most basic implementation looks something like the following:\n\nimport $router from 'wee-routes';\n\n$router({\n    transition: {\n        target: 'body',\n        class: '-is-loading',\n        timeout: 200,\n    },\n});\nHere we are telling the router to apply a given modifier class to a single container element on the page that we want to transition out and back in again.\n\n**Note:** Make sure transition class target is is not being replaced by `PJAX`, or the transition will fail.\n\nThe expectation with this implementation is that the designated class is applying a CSS transition which means that the target element must stay on the DOM throughout the navigation process. The timeout property is recommended to ensure that transitions work consistently. The value of the timeout property would typically be the same length of time as the transition applied on the target or longer.\n\n**Note:** The need for a timeout will be corrected in a future version of Wee.\n\nThe other implementation uses custom callbacks and looks like the following:\n\nimport $router from 'wee-routes';\n\n$router({\n    transition: {\n        leave(to, from, next) {\n            // Custom logic for exiting previous pageif (! transitionSuccessful) {\n              next(newError('something went wrong'));\n            }\n\n            next();\n        },\n        enter(to, from) {\n            // Custom logic for entering newly navigated page\n        }\n    }\n})\nParameters\n\nThis implemenation allows you to do anything you can dream up. Passing an error instance will cause the navigation to stop processing and return to the previous page, again same as a `before` hook.\n\nTransitions can be configured globally or per route. Transitions on a route record will take precedence:\n\nimport $router from 'wee-routes';\n\n$router({\n    transition: {\n        target: 'body',\n        class: '-is-loading',\n        timeout: 200,\n    },\n}).map([\n    {\n        path: '/',\n        transition: {\n            leave() {},\n            enter() {},\n        },\n    },\n]);"},{"slug":"/v4/script/routes?id=routeronerror","title":"$router.onError","body":"Register global error handler\n\nThis method registers global router error handlers. These handlers will be executed if anything goes wrong with navigation and/or route processing (including PJAX navigations). An error that is thrown within the router will differ in the properties they contain. However, these are the properties you can count on to determine the action you should take in your error callback:\n\nError Properties\n\nimport $router from 'wee-routes';\n\n$router.map([\n    { path: '/', init(to, from) {} },\n]).onError((error) => {\n    // Handle error\n}).run();\nAll custom errors in Wee extend `Error`. Babel cannot currently extend built-in types so we cannot use `instanceof` inspections of our custom errors to determine the type, hence `errorType` is added to all custom errors in Wee to fill this need.\n"},{"slug":"/v4/script/routes?id=routerpush","title":"$router.push","body":"Navigate with History API\n\nThis method allows you to navigate to a url and add the navigation to the browser's history. It also hooks into [PJAX](#pjax) if enabled on router, allowing you to override partial targets or pause partial replacement during the request. This method returns a promise.\n\nParameters\n\nModify PJAX\n\n$router.push('/about');\n$router.push('/about', true);\n$router.push('/about', { partials: ['.some-other-target'] });"},{"slug":"/v4/script/routes?id=routerreplace","title":"$router.replace","body":"Navigate with History API, replacing browser history entry\n\nThis method allows you to navigate to a url and replace the most recent browser history entry. It also hooks into [PJAX](#pjax) if enabled on router, allowing you to override partial targets or pause partial replacement during the request. This method returns a promise.\n\nParameters\n\nModify PJAX\n\n$router.replace('/about');\n$router.replace('/about', true);\n$router.replace('/about', { partials: ['.some-other-target'] });"},{"slug":"/v4/script/routes?id=routeraftereach","title":"$router.afterEach","body":"Register global after method\n\nThe function passed to `afterEach` will be executed at the very end of the matched route record's evaluation. Like `beforeEach`, you can register as many as you like, and they will execute in the order they were registered.\n\nimport $router from 'wee-routes';\nimport common from './common';\nimport about from './about';\n\n$router.map([\n    { path: '/', handler: common },\n    { path: '/about', handler: about },\n])\n.afterEach((to, from) => {})\n.run();"},{"slug":"/v4/script/routes?id=routerbeforeeach","title":"$router.beforeEach","body":"Register global before method\n\nThe function passed to `beforeEach` will be executed before any route record specific before methods and can act as a guard in the same way that [before](#methods) does for an individual route record. This function is passed the same parameters as all other before methods. You can register as many `beforeEach` methods as you like, and they will execute in the order they are registered.\n\nimport $router from 'wee-routes';\nimport common from './common';\nimport about from './about';\n\n$router.map([\n    { path: '/', handler: common },\n    { path: '/about', handler: about },\n]).beforeEach((to, from, next) => {\n  // ...\n  next();\n}).run();"},{"slug":"/v4/script/routes?id=routerrun","title":"$router.run","body":"Evaluate routes against current URL\n\nimport $router from 'wee-routes';\nimport common from './common';\nimport about from './about';\n\n$router.map([\n    { path: '/', handler: common },\n    { name: 'about', path: '/about', handler: about },\n]).run().catch((error) => {\n  // Run returns a promise// Do something with error\n});"},{"slug":"/v4/script/routes?id=routernotfound","title":"$router.notFound","body":"Add 404 style wildcard route\n\nThis method takes a route record object, excluding the `path` or `name` properties of a normal route record.  This route record will be evaluated if no other routes match. `notFound` is simply a convenience method. You can achieve the same functionality by registering a wildcard route record at the end of your map array with `path: '*'` and `name: 'notFound'`. This method, however, is  a little more expressive.\n\nimport $router from 'wee-routes';\nimport common from './common';\nimport about from './about';\nimport unknown from './404';\n\n$router.map([\n    { path: '/', handler: common },\n    { path: '/about', handler: about }\n])\n.notFound({ handler: unknown })\n.run();"},{"slug":"/v4/script/routes?id=routermap","title":"$router.map","body":"Define routes for application\n\nParameters\n\nimport $router from 'wee-routes';\nimport common from './common';\nimport about from './about';\n\n$router.map([\n    { path: '/', handler: common },\n    { path: '/about', handler: about },\n]).run();"},{"slug":"/v4/script/routes?id=routerpjax","title":"$router.pjax","body":"Enable and configure global PJAX behavior\n\nThis function enables a specific implementation of history navigation in which html partials are returned and replaced on the DOM rather than a full page load. This works very well to make websites that use static templates feel more like a single page application.\n\n\nOptions Object\n\nimport $router from 'wee-routes';\nimport about from './about';\nimport common from './common';\n\n$router.pjax({\n    bind: {\n        click: 'a',\n    },\n    partials: ['title', 'main'],\n}).map([\n    { path: '/', handler: common },\n    { path: '/about', handler: about },\n]).run();\n**URL Validity**\n\nWhen `pjax` is executed, it binds events to designated targets on the DOM that will trigger an AJAX request for the destination page's HTML and then navigate to the destination URL. During this binding phase, the URL of each DOM target will be evaluated to ensure the URL is valid. The following criteria determine a valid URL.\n\n\n\nURL exists (either `href` if DOM target is `<a>` or `data-url` if another DOM element)\n\n\nURL does not open new window (checks for `_blank` attribute)\n\n\nURL is absolute URL, not relative (`https://something.com/about` vs `/about`)\n\n\nTarget is not a download link\n\n\nTarget does not have `data-static` attribute\n\n\nURL is not external link\n\n\nURL is current page, only with hash added\n\n"},{"slug":"/v4/script/screen?id=screen","title":"Screen","body":"Attach events to matching breakpoint rules\n\nSyncing media queries and JavaScript reliably can be tedious. Wee seamlessly combines and triggers breakpoint logic based on your configured project media queries.\n"},{"slug":"/v4/script/screen?id=values","title":"Values","body":"You can easily disable any unneeded breakpoints by setting them to false in wee.json or add more by adding a breakpoint value to this same array.\n\n\n\nPortrait Mobile (320px)\n\n\nLandscape Mobile (480px)\n\n\nPortrait Tablet (768px)\n\n\nDesktop 1 (1024px)\n\n\nDesktop 2 (1280px)\n\n\nDesktop 3 (1440px)\n\n\n\nWee uses the font family of the HTML element to reference the current breakpoint. For example, the Portrait Mobile breakpoint is triggered when the font family is '2'. When you add/remove default breakpoints, the corresponding font family values will update automatically when the build process is run.\n\n**Default Values**\n\n\n\nPortrait Mobile (320px) - font-family: 1\n\n\nLandscape Mobile (480px) - font-family: 2\n\n\nPortrait Tablet (768px) - font-family: 3\n\n\nDesktop 1 (1024px) - font-family: 4\n\n\nDesktop 2 (1280px) - font-family: 5\n\n\nDesktop 3 (1440px) - font-family: 6\n\n\n\n**Customized Values**\n\n\n\nPortrait Mobile (320px) - font-family: 1\n\n\nLandscape Mobile (480px) - font-family: 2\n\n\nPortrait Tablet (768px) - font-family: 3\n\n\nLandscape Tablet (900px) - font-family: 4\n\n\nDesktop 1 (1024px) - font-family: 5\n\n\nDesktop 2 (1280px) - font-family: 6\n\n\nDesktop 3 (1440px) - font-family: 7\n\n\nDesktop 4 (1600px) - font-family: 8\n\n\n"},{"slug":"/v4/script/screen?id=screenmap","title":"$screen.map","body":"Watch single or set of screen events with specified options\n\n\nSet Object\n\nYou can setup as many breakpoint sets as you need. They are added to a global window resize event that evaluates once against all stored rules.\n\nSingle\nimport $screen from 'wee-screen';\n\n$screen.map({\n    size: 4,\n    callback(obj) {\n        console.log(obj);\n    },\n});\nAn object with the direction, size, previous size, and init status is passed as the first callback argument.\n\n\nMultiple\nimport $screen from 'wee-screen';\nimport common from './common';\n\n$screen.map([\n    {\n        size: 1,\n        callback: [\n            common.mobile,\n            common.smallScreen,\n        ],\n    },\n    {\n        min: 3,\n        max: 4,\n        watch: false,\n        callback: common.tablet,\n    },\n    {\n        min: 5,\n        args: ['passThrough'],\n        callback(obj, val) {\n            console.log(val); // passThroughconsole.log(obj);\n        },\n    },\n]);"},{"slug":"/v4/script/screen?id=screenreset","title":"$screen.reset","body":"Reset all bound events\n\n\nimport $screen from 'wee-screen';\n\n$screen.reset();"},{"slug":"/v4/script/screen?id=screenrun","title":"$screen.run","body":"Evaluate the current breakpoint\n\n\nSimple\nimport $screen from 'wee-screen';\n\n$screen.run();\nNamespace\nimport $screen from 'wee-screen';\n\n$screen.run('namespace');"},{"slug":"/v4/script/screen?id=screensize","title":"$screen.size","body":"Get current screen value\n\nThe value is determined by the value of the HTML element font family which stores the current media query number. The response falls between 1 and 6.\n\nimport $screen from 'wee-screen';\n\n$screen.size();\n\n---\n\n5"},{"slug":"/v4/script/store?id=store-1","title":"Store","body":""},{"slug":"/v4/script/store?id=setvar","title":"$setVar","body":"Refresh all store instances from data in DOM\n\n\n**Document**\n\n<body>\n    <meta data-set=\"key\" data-value=\"true\">\n    ...\n<body>\n**Set Variables from Document**\n\nimport { $setVar } from'wee-store';\n\n$setVar();\n**Retrieval**\n\nimport $store from'wee-store';\n\n$store.get('key');\n\n-+-\n\ntrue"},{"slug":"/v4/script/store?id=storeconcat","title":"$store.concat","body":"Merge arrays together\n\nParameters\n\nimport $store from'wee-store';\n\n$store.concat('key', 1); // Will create array if property does not yet exist\n$store.concat('key', [2, 3]);\n$store.concat('key', [4, 5], true); // Prepend value\n\n$store.get('key');\n\n-+-\n\n[4, 5, 1, 2, 3]"},{"slug":"/v4/script/store?id=storeconfigure","title":"$store.configure","body":"Sometimes, you may need to update settings on an existing store instance. This is most applicable to the default store module that is automatically generated. If you wanted to enable browser storage on the default module, for example, you could do this:\n\n$store.configure({ browserStorage: 'session' });\n\nOptions Object\n"},{"slug":"/v4/script/store?id=storecreate","title":"$store.create","body":"Create new store instance\n\nParameters\n\nOptions Object\n\nimport $store from'wee-store';\n\nconst cartStore = $store.create('cart', {\n    browserStorage: 'local',\n    prefix: 'mysite'\n});\n\ncartStore.set('quantity', 2); // Data stored in localStorage under 'mysite_cart'\n\n-+-\n\ncartStore.get('quantity'); // 2"},{"slug":"/v4/script/store?id=storedestroy","title":"$store.destroy","body":"Destroy store instance\n\nimport $store from'wee-store';\n\nconst $storeInstance = $store.create('test');\n\n$storeInstance.destroy();"},{"slug":"/v4/script/store?id=storedrop","title":"$store.drop","body":"Delete property\n\nParameters\n\nRemove by Key\nimport $store from'wee-store';\n\n// Will create array if property does not yet exist\n$store.set('key', {\n    key1: 1,\n    key2: 2\n});\n$store.drop('key.key1');\n\n$store.get('key');\n\n-+-\n\n{ key2: 2 }\nRemove by Value\nimport $store from'wee-store';\n\n// Will create array if property does not yet exist\n$store.set('key', [1, 2, 3]);\n$store.drop('key', 2);\n\n$store.get('key');\n\n-+-\n\n[1, 3]"},{"slug":"/v4/script/store?id=storeget","title":"$store.get","body":"Retrieve property\n\nParameters\n\nSimple\nimport $store from'wee-store';\n\n$store.set('key', true);\n$store.set('otherKey', false);\n$store.get('key');\n\n-+-\n\ntrue\n$store.get('notSet');\n\n-+-\n\nnull\nRetrieve all data\n// Continuation of Simple example above\n$store.get();\n\n-+-\n\n{ key: true, otherKey: false }\nFallback\n$store.get('key', 'Fallback');\n$store.get('key');\n\n-+-\n\nFallback\nnull\nSet Value\n$store.get('key', 'Fallback', true);\n$store.get('key');\n\n-+-\n\nFallback\nFallback"},{"slug":"/v4/script/store?id=storehas","title":"$store.has","body":"Check if property or value exists\n\nParameters\n\nCheck Key\nimport $store from'wee-store';\n\n$store.set('key', {\n    key1: 'Don'\n});\n$store.has('key.key1');\n\n-+-\n\ntrue\nCheck Value\nimport $store from'wee-store';\n\n$store.set('key', [1, 2, 3]);\n$store.has('key', 2);\n$store.has('key', 4);\n\n-+-\n<!--  -->\ntrue\nfalse"},{"slug":"/v4/script/store?id=storemerge","title":"$store.merge","body":"Extend object\n\nParameters\n\nimport $store from'wee-store';\n\n// Will create array if property does not yet exist\n$store.merge('key', {\n    key1: 1,\n});\n\n$store.merge('key', {\n    key2: 2,\n});\n\n$store.get('key');\n\n-+-\n\n{ key1: 1, key2: 2 }"},{"slug":"/v4/script/store?id=storepush","title":"$store.push","body":"Add a value to an array\n\nParameters\n\nimport $store from'wee-store';\n\n$store.push('key', 1); // Will create array if property does not yet exist\n$store.push('key', 2);\n$store.push('key', 3, true); // Prepend value\n\n$store.get('key');\n$store.get('key.0');\n\n-+-\n\n[3, 1, 2]\n3"},{"slug":"/v4/script/store?id=storeset","title":"$store.set","body":"Set property\n\nParameters\n\nSimple\nimport $store from'wee-store';\n\n$store.set('key', true);\nFunction\nimport $store from'wee-store';\n\n$store.set('key', function(greeting, subject) {\n    if (this.inclusive) {\n        subject = 'world';\n    }\n\n    return`${greeting}${subject}!`;\n}, {\n    scope: { inclusive: true },\n    args: ['Hello', 'Jim']\n});\n\n-+-\n\n'Hello world!'"},{"slug":"/v4/script/store?id=storesetvar","title":"$store.setVar","body":"Refresh specific store instance from data in DOM\n\n\n**Document**\n\n<body>\n    <meta data-store=\"test\" data-set=\"key\" data-value=\"true\">\n    ...\n<body>\n**Set Variables from Document**\n\nimport $store, { $setVar } from'wee-store';\n\nconst testStore = $store.create('test');\n\ntestStore.setVar();\n**Retrieval**\n\ntestStore.get('key');\n\n-+-\n\ntrue"},{"slug":"/v4/start/highlights?id=hightlights","title":"Hightlights","body":""},{"slug":"/v4/start/highlights?id=less-to-sasspostcss","title":"Less to SASS/PostCSS","body":"Until now, Wee has used Less as the pre-processor of choice. For those who are new to the concept of CSS pre-processors, Less enabled us to do things like [set variables](http://lesscss.org/features/#features-overview-feature-variables), [nest CSS selectors](http://lesscss.org/features/#features-overview-feature-nested-rules), and utilize [mixins](http://lesscss.org/features/#features-overview-feature-nested-rules) to dramatically improve the structure of our stylesheets. Pre-processors have proven to be a fantastic tool for creating clean and maintainable CSS. That being said, things can always get better.\n\n[PostCSS](http://postcss.org/) by definition, is simply a tool for transforming CSS with JavaScript. What sets PostCSS apart is the flexibility of its plugin based design. With it, we have the ability to completely customize the way that our CSS is processed. We can choose from the ever-growing collection of plugins out there, or if we need, we can build our own plugins!\n\nSee the guide on [PostCSS](/guide/postcss) for more details on exactly how we are utilizing this powerful tool.\n"},{"slug":"/v4/start/highlights?id=es2015-and-beyond","title":"ES2015 and Beyond","body":"Creating Wee 4 provided us the opportunity to bring Wee's JavaScript library up to current standards. As a result, the entire Wee codebase was refactored with ES2015+ syntax. We are very excited at the improvements this brought to the core library, but we are even more excited about the direct benefits for developers using Wee to build their projects.\n\nWee has traditionally used a construct known as controllers. They brought organization to the chaos, tying different core parts of the Wee library together and promoting modular design. This worked well, but now we have a construct built right into the language: [ES Modules](https://hacks.mozilla.org/2015/08/es6-in-depth-modules/). Like controllers, they provide a way to build an application with independent and reusable pieces of code. However, they also provide other really great benefits like explicit dependency declaration and the possibility for static code analysis which enables [tree shaking](https://webpack.js.org/guides/tree-shaking/).\n\nThe incorporation of ES2015+ features requires that we transpile our code down to ES5 before serving it to the browser to ensure that older browsers can understand it. For this, we turned to [Babel](https://babeljs.io/) and [Webpack](https://webpack.js.org/).  Read the guide on [ES Modules](/guide/es-modules) to learn why and to gain a more in depth understanding of the benefits of this new architecture.\n"},{"slug":"/v4/start/highlights?id=components","title":"Components","body":"Wee 4 comes with a component-based approach to front-end development. For years now, the front-end community has been moving towards building user interfaces based on components. This trend has many different implementations, however the basic concepts are the same which is to encapsulate reusable code. By breaking down a website into a system of reusable components, we can build complex user interfaces in a more structured, manageable way.\n\nTypically, a component is composed of a template (HTML), JavaScript, and CSS. Frameworks such as [Vue.js](https://vuejs.org/) and [React](https://facebook.github.io/react/) work under the assumption that the template will be defined and manipulated in JavaScript. However, the majority of projects at [Lewis Communications][lewis-site] generate the entire HTML document from the CMS. Although server-side rendering is possible for both of these example frameworks, the range of CMS we use is written in PHP and utilize Twig or some other templating language for generating the document. As a result, a standard component in Wee 4 contains only JavaScript and CSS. This standard component will then directly correspond to a template partial in our CMS by name.\n\nThere are other cases in which the requirements of the website justify the use of a framework like the ones mentioned above. This is why we have made [Vue.js](https://vuejs.org/) a first-class citizen in Wee 4. It is our first choice when creating more advanced user interfaces.\n\nBased on the explanation above, we have two different components that can be created in Wee 4: standard and Vue components. These can be generated with the [Wee CLI](https://www.npmjs.com/package/wee-cli) by executing `wee component -n componentName`. To specify a Vue component, just add the `v` flag `wee component -n componentName -v`. More on components can be found in the guide on [components](/guide/components).\n"},{"slug":"/v4/start/highlights?id=build-process","title":"Build Process","body":"Over time, the Wee build process had become quite complex. As Wee 4 was taking shape, it was clear that major structural changes to the project, and therefore the build process, would need to take place. For one, we were removing [Wee Modules](/build/modules) and putting in place a components directory. In addition, we were introducing new platforms like PostCSS and Webpack into the mix. These new tools were challenging the logic of our folder names and structures. Finally, Grunt was the task runner for the build process. We were ready to move on from its verbose syntax and [dwindling community](https://www.sitepoint.com/front-end-tooling-trends-2017/) (see also the[ Front-end Tooling Survey](https://ashleynolan.co.uk/blog/frontend-tooling-survey-2016-results#js-task-runners)).\n\nWee 4 is now driven by [npm scripts](https://docs.npmjs.com/misc/scripts). No more Grunt or Gulp. Establishing the build process on npm has been a great experience. Here are a few advantages we have seen so far:\n\n\n\nNo more waiting on Grunt plugin authors - Many plugins in the Grunt/Gulp ecosystem are merely wrappers around other packages. One inconvenient side-effect this has is that you are now dependent on the author of the wrapper plugin you are using when the core package it wraps has been updated. In our experience, this was starting to become an issue in the Grunt community in particular.\n\n\nBuild process transparency - It is very easy to take a peek at how the build process is working. All you need to do is look at the `package.json` and analyze the `scripts` block.\n\n\nCLI packages are all you need... for the most part - Most packages like Babel or Webpack have a 1st party CLI package. For most cases, this is all you need, and they work great. In our case, we had to create a couple of Node scripts for PostCSS and compressing images, however they were quite easy and were only necessary because of our specific needs.\n\n\n\nThough using npm scripts, we still utilize the [Wee CLI](#), however, some of the commands are simply calling a corresponding npm script defined in the package.json with some basic options passed in.\n\n**Note:** It is best to have Node 8 and NPM 5 to take advantage of the package-lock.json file that comes with Wee 4.\n\nNPM Script Resources\n\n\n[Why I Left Gulp and Grunt for npm Scripts](https://medium.freecodecamp.org/why-i-left-gulp-and-grunt-for-npm-scripts-3d6853dd22b8)\n\n\n[How to Use npm as a Build Tool](https://www.keithcirkel.co.uk/how-to-use-npm-as-a-build-tool/)\n\n\n[Why npm Scripts](https://css-tricks.com/why-npm-scripts/)\n\n\n[Npm build boilerplate](https://github.com/damonbauer/npm-build-boilerplate/blob/master/package.json)\n\n\n"},{"slug":"/v4/start/highlights?id=core-changes","title":"Core Changes","body":"Wee 4 was rethought from the ground up. The following core libraries are new or re-written:\n\n[Routes](/script/routes)\nThe routes module serves as the blueprint for a project. In Wee 4, the router has a completely new API. Here's a basic example:\n\nimport $router, { RouteHandler } from 'wee-routes';\n\n// These would be imported from other files\nconst foo = new RouteHandler({\n    init(to, from) {\n      // Initialize page specific functionality\n    },\n});\nconst bar = new RouteHandler({\n    init(to, from) {\n      // Initialize page specific functionality\n    },\n});\n\n$router.map([\n  { path: '/foo', handler: foo },\n  { path: '/bar', handler: bar },\n]).run();\nHere are some of the highlights of the new routes module:\n\n\n\nWe have greatly simplified the route matching logic. It is much easier to reason about than the previous router because only one route endpoint matches at a time.\n\n\n[Wee History](/script/history) is now part of the router. This allows for configuring websites to utilize History navigation and partial template replacement (PJAX) more intuitively. You can also make manual page navigations with the History API with the `push` and `replace` methods that hook directly into the router.\n\n\nThe new `RouteHandler` provides powerful route lifecycle hooks for bootstrapping a page and cleaning up when navigating away. For example, you could now make an AJAX request in a handler's `before` hook to retrieve data before the page is loaded. `before` hooks can also act as guards, telling the router if the route should not be matched based on certain criteria.\n\n\n\n[Fetch](/script/fetch)\nThe fetch module is used for making AJAX requests. It is now promise-based and boosted with additional options. Here is an example:\n\nimport $fetch from 'wee-fetch';\n\n$fetch.get('https://weepower.com/data.json')\n    .then(response => console.log(response.data))\n    .catch(error => console.error);\n[Store](/script/store)\nThe store module was essentially extracted from controllers from Wee 3. It allows for storing and managing data in a logical fashion. It also can be configured to sync data with either [SessionStorage](https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage) or [LocalStorage](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage). Here is an example:\n\nimport $store from 'wee-store';\n\n$store.set('foo', 'Hello world!');\n$store.get('foo'); // 'Hello world!'\n[Mediator](/script/mediator)\nThe mediator module is aptly named for the reason that it is based on the mediator design architecture. It promotes loose coupling of different parts of an application by keeping each from referring directly to one another in their codebase. Here is an example:\n\nimport $mediator from 'wee-mediator';\n\n// Listen for publication to 'newMessage' topic\n$mediator.on('newMessage', (message) => console.log(message));\n\n// In another module\n// Will cause module above to log 'Hello world!' in console\n$mediator.emit('newMessage', 'Hello world!');\n[Location](/script/location)\nThe location module was extracted from the old routes module. It has two methods for viewing information about the current browser URL: `uri` and `segments`. `uri` parses the current URL into all it's distinct anatomy, and `segments` provides easy access to the current URL's path.\n\nESLint\nWe want to also mention that we have moved from [JSHint](http://jshint.com/) to [ESLint](https://eslint.org/). It is easily customizable and works well with Webpack. We think this will be a major improvement in code styling feedback."},{"slug":"/v4/start/introduction?id=introduction","title":"Introduction","body":"Wee is a front-end framework built and maintained at [Lewis Communications](https://lewiscommunications.com) that provides a powerful set of tools for building websites. It provides a thoughtful workflow to a team or individual's front-end development as well as consolidates and decreases the dependencies required to build a variety of web products.\n"},{"slug":"/v4/start/introduction?id=demo","title":"Demo","body":"To see Wee in action, we have created a [demo project](https://github.com/weepower/wee-demo). Follow these simple steps to get up and running:\n\n\n\nClone down the repository - `git clone https://github.com/weepower/wee-demo.git`\n\n\nNavigate to the new `wee-demo` directory - `cd wee-demo`\n\n\nInstall dependencies - `npm install`\n\n\nNavigate to the `server` directory\n\n\nInstall dependencies - `npm install`\n\n\nNavigate back to the demo\n\n\nLaunch site - `npm run demo`\n\n\nOpen `http://localhost:3000` in a browser of your choice\n\n\n\n**Note:** If you already have [wee-cli](https://github.com/weepower/wee-cli) installed, you can combine the last two steps by calling `wee demo`.\n\nWe will refer to the this demo site throughout the guide, so it will be helpful to have it set up.\n"},{"slug":"/v4/start/introduction?id=getting-started","title":"Getting Started","body":"To start a new project with Wee, you can do one of the following:\n\n\n\nInstall [Wee CLI][wee-cli] - `npm i -g wee-cli`\n\n\nStart a new project - `wee init project-name`\n\n\nFollow the series of prompts to set up your project\n\n\n\nWe highly recommend installing [Wee CLI][wee-cli] as it will improve your overall development experience, however it is not required to start a project. You can also:\n\n\n\nDownload [Wee](https://github.com/weepower/wee/archive/master.zip)\n\n\n"},{"slug":"/v4/start/introduction?id=structure","title":"Structure","body":"It can be helpful to have a basic knowledge of the internal organization and makeup of Wee in order to fully harness it's potential as well as to troubleshoot potential issues.\n\nWee Core\nWee is powered by a single npm package called [Wee Core][wee-core]. You will find it in the list of dependencies in a project's `package.json`. Wee Core contains all the `wee-` prefixed JavaScript modules that are accessible in a standard project. It also contains all the base styling provided by Wee as well as the majority of the [Wee CLI][wee-cli] commands.\n\nConfiguration Files\nWee's build process can be configured by editing a file called `wee.config.js`. It is located on the top level of a Wee project. These settings are explained in detail in the [Build Configuration](/build/config) documentation.\n\nThe other main configuration file for a project is the [package.json](https://docs.npmjs.com/getting-started/using-a-package.json). All project dependencies should be specified in this file.\n\nProject Structure\nThere are three top level directories that exist in a Wee project. The names of these directories are configurable in the `wee.config.js` file:\n\n**Source**\n\nThis is where a developer will spend most/all of their time. The code written and the assets added to the source directory is bundled up and optimized by the build process and placed in the `public/assets` directory.\n\nsource/\n    commands/  // Custom CLI commands\n    components/\n    fonts/\n    images/\n    scripts/\n    styles/\n**Public**\n\nThe `public` directory is the web root of a project. Anything that you want accessible to the browser should go here. Note that nothing should be manually placed in `public/assets` as the build process erases and overwrites the contents of this directory based on the contents of the source directory.\n\n**Build**\n\nThe build process tasks and configuration files live inside of the `build` directory.\n\n**Other Files**\n\nOther build configuration and be modified by modifying the following files:\n\n.editorconfig\n.eslintrc.js\n.postcssrc.js\n.stylelintignore\n.stylelintrc.js"},{"slug":"/v4/start/linting?id=linting","title":"Linting","body":"Wee uses [eslint](https://eslint.org/) and [stylelint](https://stylelint.io/) to lint files during the build process.\n"},{"slug":"/v4/start/linting?id=eslint","title":"Eslint","body":"Wee's eslint config, `.eslintrc.js`, extends the [Airbnb JavaScript Styleguide](https://github.com/airbnb/javascript) and the [Vue Recommended](https://eslint.vuejs.org/rules/_) with a few modifications to the ruleset to fit our needs at [Lewis Communications](https://www.lewiscommunications.com):\n\nrules: {\n    strict: 0,\n    indent: ['error', 4],\n    'eol-last': 0,\n    'no-plusplus': 0,\n    'prefer-template': 0,\n    'import/prefer-default-export': 0,\n    'space-unary-ops': 0,\n    'newline-per-chained-call': 0,\n    radix: 0,\n    'import/no-dynamic-require': 0,\n    'no-param-reassign': [\n        'error',\n        {\n            ignorePropertyModificationsFor: [\n                'state'\n            ],\n        },\n    ],\n    'vue/html-indent': ['error', 4],\n},"},{"slug":"/v4/start/linting?id=stylelint","title":"Stylelint","body":"Wee's stylelint config, `.stylelintrc.js` extends the [Config Standard](https://github.com/stylelint/stylelint-config-standard) and uses the [Stylelint Order](https://github.com/hudochenkov/stylelint-order) plugin with a few modifications:\n\nrules: {\n    'order/properties-alphabetical-order': true,\n    'at-rule-no-unknown': null,\n    'no-eol-whitespace': null,\n    indentation: 4,\n    'number-leading-zero': null,\n    'at-rule-no-vendor-prefix': true,\n    'media-feature-name-no-vendor-prefix': true,\n    'property-no-vendor-prefix': true,\n    'selector-no-vendor-prefix': true,\n    'value-no-vendor-prefix': true,\n    'string-quotes': 'single',\n    'at-rule-name-case': null,\n},\n?> **Note:** If necessary, you can add any files or patterns to the `.stylelintignore` file to be ignored by stylelint"},{"slug":"/v4/start/markup?id=markup","title":"Markup","body":"An example of responsible HTML development\n"},{"slug":"/v4/start/markup?id=doctype","title":"Doctype","body":"The doctype is a critical for communicating which standard to use when rendering your website. Wee uses HTML5, the modern, semantic format for structuring data which includes a number of new elements.\n\n<!doctype html>"},{"slug":"/v4/start/markup?id=icons","title":"Icons","body":"Whether someone is on a mobile device, legacy browser, or Windows tablet your brand should stay consistent. In addition to the iOS and Safari icons the `browserconfig.xml` and `favicon.ico` files serve most environments.\n\n<link rel=\"apple-touch-icon\" href=\"/assets/img/icons/touch.png\">\n<link rel=\"mask-icon\" href=\"/assets/img/icons/pin.svg\" color=\"#349bb9\">\nTo read more about the Safari 9 mask icon requirements check out the [Apple docs](https://developer.apple.com/library/prerelease/mac/releasenotes/General/WhatsNewInSafari/Articles/Safari_9.html).\n"},{"slug":"/v4/start/markup?id=meta","title":"Meta","body":"<meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n<meta name=\"format-detection\">\n<title>Front-End Framework | Wee</title>\n<meta name=\"description\" content=\"Blueprint for modern web development.\">\nIt’s best to serve the meta charset and http-equiv values through HTTP headers. There are commented lines in the sample [.htaccess](/structure#htaccess) file for that purpose. If uncommented, you should remove the two tags from your HTML.\n"},{"slug":"/v4/start/markup?id=open-graph","title":"Open Graph","body":"The [Open Graph protocol](http://ogp.me/) enables any web page to become a rich object in a social graph. Both Facebook and Twitter leverage the tags for extracting page context when sharing.\n\n<meta property=\"og:type\" content=\"website\">\n<meta property=\"og:site_name\" content=\"Wee\">\n<meta property=\"og:title\" content=\"Front-End Framework\" itemprop=\"name\">\n<meta property=\"og:description\" content=\"Blueprint for modern web development.\" itemprop=\"description\">\n<meta property=\"og:url\" content=\"https://www.weepower.com\" itemprop=\"url\">\n<meta property=\"og:image\" content=\"https://www.weepower.com/assets/img/share.png\" itemprop=\"image\">\nIn the sample HTML Wee dual-purposes the Open Graph tags as [Schema properties](/v3/start/markup?id=schema) for the WebPage scope defined on the document root.\n"},{"slug":"/v4/start/markup?id=publisher","title":"Publisher","body":"While authorship is officially dead the publisher link is still being put to use according to Google.\n\n<link rel=\"publisher\" href=\"https://plus.google.com/+weecss\">"},{"slug":"/v4/start/markup?id=schema","title":"Schema","body":"[Schema](https://schema.org/) enables search engines to better understand the information on web pages and provide richer search results. It can also enable new tools and applications that make use of the tags.\n\n<html lang=\"en\" itemscopeitemtype=\"http://schema.org/WebPage\">"},{"slug":"/v4/start/markup?id=twitter-cards","title":"Twitter Cards","body":"With [Twitter Cards](https://dev.twitter.com/docs/cards), you can attach photos and other media to Tweets that drive traffic to your website.\n\nTwitter cards can work in conjunction with Open Graph to eliminate duplicate tag content.\n"},{"slug":"/v4/start/markup?id=web-manifest","title":"Web Manifest","body":"More information [here](/start/structure?id=webmanifest)\n\n<link rel=\"manifest\" href=\"site.webmanifest\">"},{"slug":"/v4/start/structure?id=structure-1","title":"Structure","body":"Simple organization that's easy to navigate and extend\n\nWee begins with a Sass stylesheet full of variables, a browser reset, a set of [mixins](/style/mixins) and [classes](/style/classes), and base styling. You also get example [HTML5](/start/markup), an [.htaccess](/start/structure#htaccess), sample favicons, [robots](/start/structure#robots)/[humans](/start/structure#humans).txt files, a robust [JavaScript library](/script/core), and a style guide template. Use it all or just parts, your choice\n"},{"slug":"/v4/start/structure?id=browserconfig","title":"browserconfig","body":"Introduced in IE11, the [browserconfig](https://msdn.microsoft.com/en-us/library/dn320426%28v=vs.85%29.aspx) file defines the icon configuration for Windows. By default the browser will look for the file in the root of the website.\n\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<browserconfig>\n    <msapplication>\n        <tile>\n            <square70x70logo src=\"/assets/img/icons/tile.png\"/>\n            <square150x150logo src=\"/assets/img/icons/tile.png\"/>\n            <square310x310logo src=\"/assets/img/icons/tile.png\"/>\n            <wide310x150logo src=\"/assets/img/icons/tile-wide.png\"/>\n            <TileColor>#349bb9</TileColor>\n        </tile>\n    </msapplication>\n</browserconfig>"},{"slug":"/v4/start/structure?id=htaccess","title":"htaccess","body":"Regardless if you’re running an xml-compatible web server the principles still apply. Avoid serving content from duplicate sources and present a consistent URL structure. Use this as a starting point.\n\nMaintenance\nThe maintenance block serves as a quick mechanism to toggle a temporary redirect to a maintenance page. It also has an IP exclusion to ensure that internal traffic can still access the full site.\n\nRewriteCond %{REQUEST_URI} !^/maintenance\\.html$\nRewriteCond %{REMOTE_ADDR} !^123\\.456\\.789\\.\nRewriteCond $1 !^(assets) [NC]\nRewriteRule ^(.*)$ /maintenance.html [R=307,L]\nSetup\nA couple basic xml settings are made and the X-UA-Compatible header and encoding are set. If uncommented the two corresponding meta tags should be removed from the [HTML head](/v3/start/markup?id=meta).\n\nRewriteEngine On\nOptions +FollowSymLinks -Indexes -MultiViews\n\n# Internet Explorer document mode\nHeader set X-UA-Compatible \"IE=edge\"# Disable iframe embedding\nHeader always append X-Frame-Options SAMEORIGIN\n\n# Character set\nAddDefaultCharset utf-8\nAddCharset utf-8 .atom .css .geojson .js .json .jsonld .manifest .map .rss .xml\n\n# HTTP Strict Transport Security\nHeader always set Strict-Transport-Security \"max-age=7776000; includeSubDomains\"\nSecurity Headers\nHeader set X-Content-Type-Options \"nosniff\"\nHeader set X-Frame-Options SAMEORIGIN\n# Header set X-XSS-Protection \"1; mode=block\"\n# Header always set Strict-Transport-Security \"max-age=7776000; includeSubDomains\"\nHTTP Access Control\n[CORS headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS) open up web servers for cross-domain access. This is particularly helpful when serving assets through a pull CDN zone.\n\n# Cross-origin images\n<FilesMatch \"\\.(bmp|gif|ico|jpe?g|png|svg|webp)$\">\n    SetEnvIf Origin \":\" IS_CORS\n    Header set Access-Control-Allow-Origin \"*\" env=IS_CORS\n</FilesMatch>\n\n# Cross-origin web fonts\n<FilesMatch \"\\.(eot|otf|ttf|woff2?)$\">\n    Header set Access-Control-Allow-Origin \"*\"\n</FilesMatch>\n\n# Conditionally target static assets\n<FilesMatch \"\\.(css|eot|gif|ico|jpe?g|otf|png|svg|ttf|webp|woff2?)$\">\n    SetEnv IS_STATIC true\n    Header set Cache-control max-age=2592000\n    Header unset X-UA-Compatible\n    Header unset X-Frame-Options\n    # Header unset X-XSS-Protection\n</FilesMatch>\nErrors\nIt’s important to intercept common HTTP errors on the host level with custom pages.\n\nErrorDocument 404 /404.html\nProject\nAdd your project’s specific rules to this section.\n\n# Custom redirects and rewrites\nRewrites\nWithout specific redirects most servers will allow multiple URLs to access the same endpoint. Funnel requests through redirect logic to ensure there is only one true canonical address.\n\n# Force www\nRewriteCond %{HTTP_HOST} !^www.weepower.com$ [NC]\nRewriteRule ^(.*)$ http://www.weepower.com/$1 [R=301,L]\n\n# Remove www (use either force or remove)\n# RewriteCond %{HTTP_HOST} !^weepower.com$ [NC]\n# RewriteRule ^(.*)$ http://weepower.com/$1 [R=301,L]\n\n# Force SSL\nRewriteCond %{HTTPS} !on\nRewriteRule ^(.*)$ https://%{HTTP_HOST}/$1 [R=301,L]\n\n# Remove trailing slash\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteRule ^(.*)/$ /$1 [R=301,L]\n\n# Remove multiple slashes\nRewriteCond %{THE_REQUEST} //\nRewriteRule ^(.*)$ /$1 [R=301,L]\n\n# Remove index reference\nRewriteCond %{REQUEST_URI} ^(.*/)index.html$ [NC]\nRewriteRule . %1 [R=301,L]\n\n# Remove extension\nRewriteCond %{REQUEST_URI} ^GET\\ (.*).html(.*)\\ HTTP\nRewriteRule (.*).html$ $1$2 [R=301]\n\n# Rewrite extension\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteCond %{REQUEST_FILENAME}.html -f\nRewriteRule (.*) $1.html [L]"},{"slug":"/v4/start/structure?id=humans","title":"humans","body":"Of course you want robots to understand your site but what if humans take an interest? Use the `humans.txt` file to credit all of your tools and languages.\n"},{"slug":"/v4/start/structure?id=robots","title":"robots","body":"Website owners use the `robots.txt` file to give instructions about their site to web robots, specifically what resources should be excluded from indexing.\n"},{"slug":"/v4/start/structure?id=webmanifest","title":"Webmanifest","body":"The web app manifest provides information about an application (such as its name, author, icon, and description) in a JSON text file. The manifest informs details for websites installed on the homescreen of a device, providing users with quicker access and a richer experience\n\n{\n    \"name\": \"Wee\",\n    \"short_name\": \"Wee\",\n    \"start_url\": \".\",\n    \"display\": \"standalone\",\n    \"background_color\": \"#fff\",\n    \"description\": \"Blueprint for modern web development\",\n    \"icons\": [{\n        \"src\": \"assets/images/icons/tile-wide.png\",\n        \"sizes\": \"720x378\",\n        \"type\": \"image/png\"\n    }, {\n        \"src\": \"assets/images/icons/tile.png\",\n        \"sizes\": \"480x480\",\n        \"type\": \"image/png\"\n    }, {\n        \"src\": \"assets/images/icons/touch.png\",\n        \"sizes\": \"360x360\",\n        \"type\": \"image/png\"\n    }]\n}"},{"slug":"/v4/style/classes?id=classes","title":"Classes","body":"Wee tries to stay out of your way and that means shipping with only the bare minimum of helper classes. As demonstrated, many of the helper classes can also be used as mixins.\n"},{"slug":"/v4/style/classes?id=container","title":"Container","body":"Create a centered container based on `$minWidth`, `$maxWidth`, and `$bumperPadding`\n\n.container {\n    @if ($padContainer == true) {\n        padding-left: $bumperPadding;\n        padding-right: $bumperPadding;\n    }\n\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    box-sizing: content-box;\n    @if ($maxWidth != false) {\n        max-width: $maxWidth;\n    }\n\n    @if ($minWidth != false) {\n        min-width: $minWidth;\n    }\n}"},{"slug":"/v4/style/classes?id=image-align","title":"Image Align","body":"Perfect for alignment of images in content blocks\n\nLeft\n.img-left {\n    float: left;\n    margin-top: .32em;\n    margin-right: $imageMarginSide;\n    margin-bottom: $imageMarginBottom;\n}\nRight\n.img-left {\n    float: right;\n    margin-top: .32em;\n    margin-bottom: $imageMarginBottom;\n    margin-left: $imageMarginSide;\n}"},{"slug":"/v4/style/classes?id=js-hide","title":"JS Hide","body":"Used by the core Wee script to toggle visibility\n\n.js-hide {\n    display: none !important;\n}"},{"slug":"/v4/style/classes?id=not-printed","title":"Not Printed","body":"If print styling is enabled exclude elements from being printed\n\n<h1 class=\"not-printed\">This won't be output when printing.</h1>"},{"slug":"/v4/style/mixins?id=mixins","title":"Mixins","body":""},{"slug":"/v4/style/mixins?id=absolute","title":"absolute","body":"@mixin absolute($top: false, $right: false, $bottom: false, $left: false)\n@include absolute();\n\n-+-\n\nposition: absolute;\n@include absolute(4rem, 3rem, 2rem, 1rem);\n\n-+-\n\nposition: absolute;\ntop: 4rem;\nright: 3rem;\nbottom: 2rem;\nleft: 1rem;\n@include absolute(4rem, 3rem);\n\n-+-\n\nposition: absolute;\ntop: 4rem;\nleft: 3rem;"},{"slug":"/v4/style/mixins?id=block","title":"block","body":"@mixin block($width, $height);\n@include block();\n\n-+-\n\ndisplay: block;\n\n@include block(40rem, 100px);\n\n-+-\n\ndisplay: block;\nwidth: 40rem;\nheight: 100px;"},{"slug":"/v4/style/mixins?id=bookends","title":"bookends","body":"@mixin bookends($value: '-', $margin: .5em, $font: false, $color: false);\n@include bookends('-', .5em);\n\n-+-\n\n&:before {\n    content: '-';\n    margin-right: .5em;\n}\n&:after {\n    content: '-';\n    margin-left: .5em;\n}\n@include bookends('~', 1, $color: red);\n\n-+-\n\n&:before {\n    content: '~';\n    margin-right: 1rem;\n    color: red;\n}\n&:after {\n    content: '~';\n    margin-left: 1rem;\n    color: red;\n}"},{"slug":"/v4/style/mixins?id=centeredblock","title":"centeredBlock","body":"@mixin centeredBlock($maxWidth: false, $margin: false)\n@include centeredBlock();\n\n-+-\n\ndisplay: block;\nmargin-left: auto;\nmargin-right: auto;\n@include centeredBlock(80rem, 2rem);\n\n-+-\n\ndisplay: block;\nmargin-left: auto;\nmargin-right: auto;\nwidth: 80rem;\nmargin-bottom: 2rem;\n"},{"slug":"/v4/style/mixins?id=circle","title":"circle","body":"@mixin circle($diameter, $crop: false, $display: block)\n@include circle(.5);\n\n-+-\n\nbackground-clip: border-box;\nborder-radius: 0.25rem;\nheight: 0.5rem;\nwidth: 0.5rem;\ndisplay: block;\n@include circle(.5, true);\n\n-+-\nbackground-clip: border-box;\nborder-radius: 0.25rem;\nheight: 0.5rem;\nwidth: 0.5rem;\noverflow: hidden;\ndisplay: block;\n@include circle(.5, $display: inline);\n\n-+-\n\nbackground-clip: border-box;\nborder-radius: 0.25rem;\nheight: 0.5rem;\nwidth: 0.5rem;\ndisplay: inline-block;\n"},{"slug":"/v4/style/mixins?id=clearfix","title":"clearfix","body":"@include clearfix();\n\n-+-\n\n&:after {\n    clear: both;\n    content: '';\n    display: block;\n}"},{"slug":"/v4/style/mixins?id=column","title":"column","body":"@mixin column($keyword: false, $share: false, $columns: $gridColumns, $margin: $gridMargin)\n@include column();\n\n-+-\n\nfloat: left;\nwidth: 100%;\n@include column(40%);\n\n-+-\n\nfloat: left;\nwidth: 40%;\n@include column(spaced, 1, 4, 2%);\n\n-+-\n\nfloat: left;\nmargin-left: 2%;\nwidth: 23%;\n@include column(1, 2);\n\n-+-\n\nfloat: left;\nwidth: 50%;"},{"slug":"/v4/style/mixins?id=columnmodify","title":"columnModify","body":"@mixin columnModify($keyword: false, $share: false, $columns: $gridColumns, $margin: $gridMargin)\n@include columnModify(60%);\n\n-+-\n\nwidth: 60%;\n@include columnModify(spaced, 1, 4, 5%);\n\n-+-\n\nmargin-left: 5%;\nwidth: -20%;\n@include columnModify(1, 5);\nwidth: 20%;"},{"slug":"/v4/style/mixins?id=columnoffset","title":"columnOffset","body":"@mixin columnOffset($keyword: false, $share: false, $columns: $gridColumns, $margin: ($gridMargin / 2))\n@include columnOffset(spaced, 3, 4, 5%);\n\n-+-\n\nmargin-left: 85%;\n@include columnOffset(2, 5);\n\n-+-\n\nmargin-left: 40%;"},{"slug":"/v4/style/mixins?id=columnpull","title":"columnPull","body":"@mixin columnPull($share, $columns: $gridColumns)\n@include columnPull(1, 2);\n\n-+-\n\nposition: relative;\nright: 50%;"},{"slug":"/v4/style/mixins?id=columnpush","title":"columnPush","body":"@mixin columnPush($share, $columns: $gridColumns)\n@include columnPush(1, 2);\n\n-+-\n\nleft: 50%;\nposition: relative;"},{"slug":"/v4/style/mixins?id=columnreset","title":"columnReset","body":"@mixin columnReset($resetMargin: false)\n@include columnReset();\n\n-+-\n\nfloat: none;\nwidth: auto;\n@include columnReset(true);\n\n-+-\n\nfloat: none;\nwidth: auto;\nmargin-left: 0;"},{"slug":"/v4/style/mixins?id=ellipsis","title":"ellipsis","body":"@mixin ellipsis(maxWidth = false)\n@include ellipsis();\n\n-+-\n\noverflow-x: hidden;\ntext-overflow: ellipsis;\nwhite-space: nowrap;\n@include ellipsis(10);\n\n-+-\n\noverflow-x: hidden;\ntext-overflow: ellipsis;\nwhite-space: nowrap;\nmax-width: 10rem;"},{"slug":"/v4/style/mixins?id=fixed","title":"fixed","body":"@mixin fixed($top: false, $right: false, $bottom: false, $left: false);\n@include fixed();\n\n-+-\n\nposition: fixed;\n@include fixed($bottom: 3rem, $top: 4rem);\n\n-+-\n\nposition: fixed;\ntop: 4rem;\nbottom: 3rem;"},{"slug":"/v4/style/mixins?id=flex","title":"flex","body":"@mixin flex($grow: 0, $shrink: 0, $basis: auto)\n@include flex();\n\n-+-\n\nflex-grow: 0;\nflex-shrink: 0;\nflex-basis: auto;\n@include flex(1, 2);\n\n-+-\nflex-grow: 1;\nflex-shrink: 2;\nflex-basis: auto;"},{"slug":"/v4/style/mixins?id=flexcontainer","title":"flexContainer","body":"@mixin flexContainer($direction: row, $wrap: nowrap, $justify: flex-start,\n$align: stretch, $alignContent: stretch)\n@include flexContainer();\n\n-+-\n\ndisplay: flex;\nflex-direction: row;\nflex-wrap: nowrap;\njustify-content: flex-start;\nalign-items: stretch;\nalign-content: stretch;\n@include flexContainer(column, wrap, $alignContent: start);\n\n-+-\n\ndisplay: flex;\nflex-direction: column;\nflex-wrap: wrap;\njustify-content: flex-start;\nalign-items: stretch;\nalign-content: start;"},{"slug":"/v4/style/mixins?id=font","title":"font","body":"@mixin font($family: $baseFont, $size, $weight, $lineHeight, $style, $spacing)\n@include font('Times New Roman', 1.4, bold, 1.5, italic, 0.1);\n\n-+-\n\nfont-family: 'Times New Roman';\nfont-size: 1.4rem;\nfont-weight: bold;\nline-height: 1.5em;\nletter-spacing: 0.1rem;"},{"slug":"/v4/style/mixins?id=heading","title":"heading","body":"@mixin heading($fontSize: false)\n@include heading();\n\n-+-\n\ncolor: inherit;\nfont-family: 'Tahoma, Geneva, sans-serif';\nfont-weight: bold;\nline-height: 1.4em;\nmargin-bottom: 2rem;\nsmall {\n    font-weight: normal;\n}"},{"slug":"/v4/style/mixins?id=hidetext","title":"hideText","body":"@include hideText();\n\n-+-\n\noverflow: hidden;\ntext-indent: 110%;\nwhite-space: nowrap;"},{"slug":"/v4/style/mixins?id=icon","title":"icon","body":"@mixin icon(icon, size = 'inherit', rotate = false, weight = 'normal', height = 0, sharpen = true, font = vars.icon.family)\n.block {\n    &::after {\n        @include icon(\\e901);\n    }\n}\n\n-+-\n\n.block::after {\n    content: '\\e901';\n    font-family: 'Open Sans' sans-serif;\n    font-size: inherit;\n    font-weight: normal;\n    line-height: 0;\n    font-style: normal;\n    display: inline-block;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}"},{"slug":"/v4/style/mixins?id=iconmodify","title":"iconModify","body":"@mixin iconModify(icon = false, size = false, rotate = false, weight = false, sharpen = false)\n.block {\n    &::after {\n        @include iconModify(\\e901);\n    }\n}\n\n-+-\n\n.block::after {\n    content: '\\e901';\n}"},{"slug":"/v4/style/mixins?id=inlineblock","title":"inlineBlock","body":"@mixin inlineBlock(width, height)\n@include inlineBlock();\n\n-+-\n\ndisplay: inline-block;\n@include inlineBlock(40rem, 30rem);\n\n-+-\n\ndisplay: inline-block;\nwidth: 40rem;\nheight: 30rem;\n@include inlineBlock($height: 100px);\n\n-+-\n\ndisplay: inline-block;\nheight: 100px;"},{"slug":"/v4/style/mixins?id=inlinecolumn","title":"inlineColumn","body":"@mixin inlineColumn(keyword, share, columns = vars.grid.columns, margin = vars.grid.margin, spaceless = vars.grid.spaceless)\n@include inlineColumn(spaced, 1, 4, 4%);\n\n-+-\n\ndisplay: inline-block;\nvertical-align: top;\nmargin-left: 4%;\nwidth: 21%;\nletter-spacing: normal;\n@include inlineColumn(1, 5);\n\n-+-\n\ndisplay: inline-block;\nvertical-align: top;\nwidth: 20%;"},{"slug":"/v4/style/mixins?id=inlinerow","title":"inlineRow","body":"@mixin inlineRow(margin = vars.grid.margin, spaceless = vars.grid.spaceless)\n@include inlineRow(4%, false);\n\n-+-\n\nmargin-left: -4%;\nmax-width: 104%;\nletter-spacing: -.32em;\n@include inlineRow(4%, true);\n\n-+-\n\nmargin-left: -4%;\nmax-width: 104%;"},{"slug":"/v4/style/mixins?id=loadfont","title":"loadFont","body":"@mixin loadFont(name, $file: $name, $weight: normal, $style: normal)\n@include loadFont(icomoon, $weight: 500);\n\n-+-\n\n@font-face {\n    font-family: icomoon;\n    font-weight: 500;\n    font-style: normal;\n    src: url('../fonts/icomoon.woff2'),\n        url('../fonts/icomoon.woff'),\n        url('../fonts/icomoon.ttf');\n}"},{"slug":"/v4/style/mixins?id=noclear","title":"noClear","body":"@mixin noClear();\n\n-+-\n\n&::-ms-clear {\n    display: none\n}\n&::-webkit-search-cancel-button {\n    -webkit-appearance: none\n}"},{"slug":"/v4/style/mixins?id=placeholder","title":"placeholder","body":"@mixin placeholder($color: $inputPlaceholderColor)\n@include placeholder();\n\n-+-\n\n&:-moz-placeholder {\n    color: #bfbfbf\n}\n&::-moz-placeholder {\n    color: #bfbfbf\n}\n&:-ms-input-placeholder {\n    color: #bfbfbf\n}\n&::-webkit-input-placeholder {\n    color: #bfbfbf\n}\n@include placeholder(#fff);\n\n-+-\n\n&:-moz-placeholder {\n    color: #fff\n}\n&::-moz-placeholder {\n    color: #fff\n}\n&:-ms-input-placeholder {\n    color: #fff\n}\n&::-webkit-input-placeholder {\n    color: #fff\n}"},{"slug":"/v4/style/mixins?id=prefix","title":"prefix","body":"@mixin prefix($value: '-', $margin: .5em, $font: false, $color: false)\n@include prefix();\n\n-+-\n\n&:before {\n    content: '-';\n    margin-right: .5em;\n}\nprefix('~', 1rem, $color: blue);\n&:before {\n    content: '~';\n    margin-right: 1rem;\n    color: blue;\n}"},{"slug":"/v4/style/mixins?id=ratio","title":"ratio","body":"@mixin ratio($keyword: false, $ratio: 16 / 9)\n@include ratio(embed, 4/3);\n\n-+-\n\ndisplay: block;\nheight: 0;\npadding-top: 75%;\n@include ratio(embed, 4/3);\n\n-+-\n\noverflow: hidden;\nposition: relative;\n&:before {\n    content: '';\n    display: block;\n    height: 0;\n    padding-top: 75%\n}"},{"slug":"/v4/style/mixins?id=resizable","title":"resizable","body":"@mixin resizable($value: both)\n@include resizable();\n\n-+-\n\noverflow: hidden;\nresize: both;\n@include resizable(vertical);\n\n-+-\n\noverflow: hidden;\nresize: vertical;"},{"slug":"/v4/style/mixins?id=rounded","title":"rounded","body":"@mixin rounded($keyword: '', $value: $defaultRadius)\n@include rounded(5px);\n\n-+-\n\nborder-radius: 5px;\n@include rounded(top, 4px);\n\n-+-\n\nborder-top-left-radius: 4px;\nborder-top-right-radius: 4px;\n@include rounded(left, 2px);\n\n-+-\n\nborder-top-left-radius: 2px;\nborder-bottom-left-radius: 2px;"},{"slug":"/v4/style/mixins?id=row","title":"row","body":"@mixin row($margin: $gridMargin)\n@include row();\n\n-+-\n\nmargin-left: -5%;\nmax-width: 105%;\n&:after {\n    clear: both;\n    content: '';\n    display: block;\n}\n@include row(10%);\n\n-+-\n\nmargin-left: -10%;\nmax-width: 110%;\n&:after {\n    clear: both;\n    content: '';\n    display: block;\n}"},{"slug":"/v4/style/mixins?id=rowmodify","title":"rowModify","body":"@mixin rowModify($margin: $gridMargin)\n@include rowModify(4%);\n\n-+-\n\nmargin-left: -4%;\nmax-width: 104%;"},{"slug":"/v4/style/mixins?id=rowreset","title":"rowReset","body":"@include rowReset();\n\n-+-\n\nmargin-left: 0;\nmax-width: none;"},{"slug":"/v4/style/mixins?id=selection","title":"selection","body":"@mixin selection($color: $selectionColor, $background: $selectionBackground)\n@include selection();\n\n-+-\n\n&::selection {\n    background: #349bb9;\n    color: #fff;\n    text-shadow: none\n}\n@include selection(#000, #fff);\n\n-+-\n\n&::selection {\n    background: #fff;\n    color: #000;\n    text-shadow: none\n}"},{"slug":"/v4/style/mixins?id=size","title":"size","body":"@mixin size($width, $height: false)\n@include size(4rem);\n\n-+-\n\nwidth: 4rem;\nheight: 4rem;\nsize(4rem, 250px);\nwidth: 4rem;\nheight: 250px;"},{"slug":"/v4/style/mixins?id=spacedblock","title":"spacedBlock","body":"@mixin spacedBlock($margin: $blockMarginBottom, $width: false, $height: false)\n@include spacedBlock($margin-bottom: 4);\n\n-+-\n\ndisplay: block;\nmargin-bottom: 4rem;\n@includes spacedBlock(4rem, 20rem, 100px);\n\n-+-\n\ndisplay: block;\nmargin-bottom: 4rem;\nwidth: 20rem;\nheight: 100px;"},{"slug":"/v4/style/mixins?id=suffix","title":"suffix","body":"@mixin suffix($value: '-', $margin: .5em, $font: false, $color: false)\n@include suffix();\n\n-+-\n\n&:before {\n    content: '-';\n    margin-left: .5em;\n}\n@include suffix('~', 1em, $color: blue);\n\n-+-\n\n&:before {\n    content: '~';\n    margin-left: em;\n    color: blue;\n}"},{"slug":"/v4/style/mixins?id=textsharpen","title":"textSharpen","body":"@mixin textSharpen()\n\n-+-\n\n-webkit-font-smoothing: antialiased;\n-moz-osx-font-smoothing: grayscale;"},{"slug":"/v4/style/mixins?id=triangle","title":"triangle","body":"@mixin triangle($keyword, $color: $darkGray, $size: 5px, $width: $size)\n@include triangle(up);\n\n-+-\n\ncontent: '';\nheight: 0;\nwidth: 0;\nborder-left: 5px solid transparent;\nborder-right: 5px solid transparent;\nborder-bottom: 5px solid #737373;\n@include triangle(right, $color: blue, $size: 3px);\n\n-+-\n\ncontent: '';\nheight: 0;\nwidth: 0;\nborder-top: 3px solid transparent;\nborder-bottom: 3px solid transparent;\nborder-left: 3px solid blue;\n@include triangle(left, red, $width: 10px);\n\n-+-\n\ncontent: '';\nheight: 0;\nwidth: 0;\nborder-top: 10px solid transparent;\nborder-bottom: 10px solid transparent;\nborder-right: 5px solid red;"},{"slug":"/v4/style/variables?id=variables","title":"Variables","body":""},{"slug":"/v4/style/variables?id=addresses","title":"Addresses","body":"$addressColor: $darkestGray;\n$addressFont: $baseFont;\n$addressFontSize: $baseFontSize;\n$addressFontWeight: normal;\n$addressFontStyle: normal;\n$addressLineHeight: $paragraphLineHeight;"},{"slug":"/v4/style/variables?id=base","title":"Base","body":"$rootFontSize: 62.5%;\n\n$baseColor: $darkestGray;\n$baseFont: Arial, Helvetica, sans-serif;\n$baseFontSize: 1.6rem;\n$baseFontWeight: normal;\n$baseLineHeight: 1em;\n\n$bodyBackground: $white;"},{"slug":"/v4/style/variables?id=buttons","title":"Buttons","body":"$buttonStyled: true;\n\n$buttonColor: $white;\n$buttonFont: $baseFont;\n$buttonFontSize: $baseFontSize;\n$buttonFontWeight: normal;\n\n$buttonPaddingHorizontal: 3rem;\n$buttonPaddingVertical: 1.3rem;\n\n$buttonMarginBottom: false;\n\n$buttonRounded: $defaultRadius; // false to disable\n\n$buttonTransitionEnabled: false;\n$buttonTransitionProperty: background-color;\n$buttonTransitionDuration: $defaultDuration;\n\n$buttonActiveTransitionEnabled: false;\n$buttonActiveTransitionProperty: background-color;\n$buttonActiveTransitionDuration: $defaultDuration;\n\n$buttonBackground: $darkGray;\n$buttonBackgroundHover: darken($buttonBackground, 5%);\n$buttonBackgroundActive: darken($buttonBackground, 10%);\n\n$buttonBorderColor: false; // false to disable\n\n// Colored Buttons\n\n$coloredButtonClassModifier: colored-button;\n\n$coloredButtonColor: $white; // font color\n\n$coloredButtonBackground: $linkColor;\n$coloredButtonBackgroundHover: darken($coloredButtonBackground, 5%);\n$coloredButtonBackgroundActive: darken($coloredButtonBackground, 10%);\n\n$coloredButtonBorderColor: false;\n\n// Disabled Buttons\n\n$disabledButtonClassModifier: -disabled;\n\n$disabledButtonColor: $darkGray;\n\n$disabledButtonBackground: $lightGray;\n\n$disabledButtonBorderColor: false;\n\n$disabledButtonCursor: not-allowed;"},{"slug":"/v4/style/variables?id=code","title":"Code","body":"$codeColor: $darkestGray;\n$codeFont: monospace;\n$codeFontSize: $baseFontSize;\n$codeLineHeight: 1.4em;\n\n$codeBackground: $lighterGray;\n\n$codeBorderColor: false;\n$codeRounded: false;\n\n$codePaddingHorizontal: .5em;\n$codePaddingVertical: .2em;\n\n$codeBlockColor: $lightestGray;\n$codeBlockFont: $codeFont;\n$codeBlockFontSize: 1.3rem;\n$codeBlockLineHeight: $paragraphLineHeight;\n$codeBlockTabSize: 4;\n$codeBlockWrap: false;\n$codeBlockMarginBottom: $blockMarginBottom;\n\n$codeBlockBackground: $darkestGray;\n\n$codeBlockBorderColor: $codeBorderColor; // false to disable\n$codeBlockRounded: false;\n\n$codeBlockPaddingHorizontal: 2rem;\n$codeBlockPaddingVertical: 1.4rem;"},{"slug":"/v4/style/variables?id=colors","title":"Colors","body":"$primary: #5789ff;\n$secondary: #121212;\n$tertiary: #ff9b57;\n$info: #1a28ff;\n$success: #2ed183;\n$warning: #ff4121;"},{"slug":"/v4/style/variables?id=fonts","title":"Fonts","body":"$fontPath: '../fonts/'; // absolute or relative path\n$iconFont: icons;\n$woff2Enabled: true; // false to disable"},{"slug":"/v4/style/variables?id=forms","title":"Forms","body":"// Inputs\n\n$inputColor: $darkerGray;\n$inputFont: $baseFont;\n$inputFontSize: $baseFontSize;\n$inputFontWeight: $baseFontWeight;\n\n$inputBackground: $white;\n\n$inputBorderColor: $lighterGray;\n$inputBorderColorHover: darken($inputBorderColor, 10%);\n$inputBorderColorFocus: darken($inputBorderColor, 20%);\n$inputBorderWidth: 1px;        // false to disable\n$inputRounded: $defaultRadius; // false to disable\n\n$inputMinWidth: 20rem; // false to disable\n$inputMinHeight: 3rem; // false to disable\n\n$inputPaddingHorizontal: 1.6rem;\n$inputPaddingVertical: 1rem;\n\n$inputMarginBottom: 2rem;\n\n$inputPlaceholderColor: lighten($inputColor, 40%);\n\n// Invalid Inputs\n\n$inputBackgroundInvalid: $white;\n$inputBorderColorInvalid: #a41818;\n$inputColorInvalid: darken($inputBorderColorInvalid, 10%);\n$inputBorderColorInvalidHover: darken($inputBorderColorInvalid, 10%);\n$inputBorderColorInvalidFocus: darken($inputBorderColorInvalid, 20%);\n$inputBorderWidthInvalid: 1px; // false to disable\n\n// Required Inputs\n\n$inputBackgroundRequired: $white;\n$inputBorderColorRequired: $darkGray;\n$inputColorRequired: darken($inputBorderColorRequired, 10%);\n$inputBorderColorRequiredHover: darken($inputBorderColorRequired, 10%);\n$inputBorderColorRequiredFocus: darken($inputBorderColorRequired, 20%);\n$inputBorderWidthRequired: 1px; // false to disable\n\n// Disabled Inputs\n\n$inputColorDisabled: $darkGray;\n\n$inputBackgroundDisabled: $lightestGray;\n\n$inputBorderWidthDisabled: false; // false to disable\n\n$inputCursorDisabled: not-allowed;\n\n$inputDisabledModifier: -disabled;\n$inputDisabledCursor: not-allowed;\n\n// Selects\n\n$multiSelectMinHeight: 8rem;\n\n// Checkboxes\n\n$checkboxMarginBottom: 1rem;\n$checkboxMarginRight: .5rem;\n\n// Textareas\n\n$textareaLineHeight: 1.3em;\n$textareaMinHeight: 8rem;\n$textareaResize: vertical; // none, horizontal, vertical, both\n$textareaPaddingHorizontal: 1.6rem;\n$textareaPaddingVertical: 1rem;\n\n// Legends\n\n$legendColor: $darkerGray;\n$legendFont: $baseFont;\n$legendFontSize: 1.8rem;\n\n$legendMarginBottom: 1.4rem;\n\n// Labels\n\n$labelFontWeight: normal;\n$labelLineHeight: 1.3em;\n\n$labelMarginBottom: .4rem;\n$labelMarginRight: 1rem;"},{"slug":"/v4/style/variables?id=grayscale","title":"Grayscale","body":"$white: #fff;\n$lightestGray: darken(#fff, 4%);\n$lighterGray: darken(#fff, 10%);\n$lightGray: darken(#fff, 25%);\n$gray: darken(#fff, 35%);\n$darkGray: darken(#fff, 55%);\n$darkerGray: darken(#fff, 65%);\n$darkestGray: darken(#fff, 75%);\n$black: #000;"},{"slug":"/v4/style/variables?id=headings","title":"Headings","body":"$headingColor: inherit;\n$headingFont: Tahoma, Geneva, sans-serif;\n$headingFontWeight: $boldFontWeight;\n$headingLineHeight: 1.4em;\n\n$headingMarginBottom: 2rem;\n\n$h1: 3.6rem; // font sizes\n$h2: 3.2rem;\n$h3: 2.8rem;\n$h4: 2.4rem;\n$h5: 2rem;\n$h6: 1.6rem;"},{"slug":"/v4/style/variables?id=horizontal-rule","title":"Horizontal Rule","body":"$ruleColor: $lightGray;\n$ruleHeight: 1px;\n$ruleStyle: solid;\n$ruleMargin: $blockMarginBottom;"},{"slug":"/v4/style/variables?id=images","title":"Images","body":"$imagePath: '../images/'; // absolute or relative path\n$spriteFilename: 'sprite.png'; // relative to image path above\n\n$retinaSuffix: '-2x'; // retina filename suffix\n\n$retinaSpriteWidth: auto;\n$retinaSpriteHeight: auto;\n\n// Margin applied when using img-left and img-right classes\n\n$imageMarginBottom: 2rem;\n$imageMarginSide: 2rem;\n\n// Figures\n\n$figureBorderColor: false; // false to disable\n$figureRounded: false;\n\n$figurePadding: $blockMarginBottom;\n\n// Figure Captions\n\n$figCaptionColor: $darkGray;\n$figCaptionFontStyle: italic;\n$figCaptionLineHeight: $paragraphLineHeight;\n\n// Alignment\n\n$imageLeftClass: img-left;\n$imageRightClass: img-right;"},{"slug":"/v4/style/variables?id=layout","title":"Layout","body":"$minWidth: false;  // min container width, false to disable\n$maxWidth: 1280px; // max container width, false to disable\n\n$bumperPadding: 6%;  // bumper padding on containers, false to disable\n$padContainer: true; // enable bumperPadding on containers\n\n$gridMargin: 5%; // default margin for spaced columns\n$gridColumns: 8; // default number of columns in grid\n\n$gridSpaceless: false; // set to true to eliminate inline grid whitespace hack\n\n$blockMarginBottom: 4rem; // default spacing for lists, form elements, and other blocks"},{"slug":"/v4/style/variables?id=links","title":"Links","body":"$linkColor: $primary;\n$linkColorHover: darken($linkColor, 10%);\n$linkColorActive: darken($linkColor, 20%);\n\n$linkDecoration: none;       // none, underline\n$linkDecorationHover: false; // none, underline, false"},{"slug":"/v4/style/variables?id=miscellaneous","title":"Miscellaneous","body":"$smallFontSize: .8em;\n\n$selectionColor: $white;\n$selectionBackground: $linkColor;\n\n$boldFontWeight: bold;\n$normalFontWeight: normal;\n\n$markColor: $baseColor;\n$markBackground: yellow;\n\n$defaultRadius: 3px;\n$defaultOpacity: .2;\n$defaultDuration: .2s;\n$defaultTiming: ease-in-out;\n\n$abbrUnderline: dotted; // dotted, solid, none"},{"slug":"/v4/style/variables?id=paragraphs","title":"Paragraphs","body":"$paragraphColor: $baseColor;\n$paragraphFontWeight: $baseFontWeight;\n$paragraphLineHeight: 1.7em;\n\n$paragraphMarginBottom: 2rem;"},{"slug":"/v4/style/variables?id=print","title":"Print","body":"$printPageMargin: 2cm .5cm;"},{"slug":"/v4/style/variables?id=quotes","title":"Quotes","body":"$quoteColor: $darkestGray;\n$quoteFont: Georgia, Times, serif;\n$quoteFontSize: 2rem;\n$quoteFontStyle: italic;\n$quoteFontWeight: normal;\n$quoteLineHeight: 1.4em;\n\n$quotePaddingHorizontal: 2em;\n$quotePaddingVertical: 1em;\n\n// Cites\n\n$citeColor: $gray;\n$citeFont: $baseFont;\n$citeFontSize: 1.8rem;\n$citeFontStyle: normal;\n$citeFontWeight: normal;\n$citeLineHeight: 1.2em;\n\n$citeMarginTop: 1.4rem;\n\n$citeIndicator: '\\2014\\00a0';"}]
